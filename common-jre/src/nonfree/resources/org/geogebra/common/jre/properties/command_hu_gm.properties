# Copyright (c) GeoGebra Group, office@geogebra.org
# The GeoGebra language files are licensed to you under the terms of the
# Creative Commons Attribution-NonCommercial-ShareAlike licence (version 3.0 or later),
# the current text of which can be found via this link:
# https://creativecommons.org/licenses/by-nc-sa/3.0/legalcode.
# Attribution (as required by that Creative Commons license) should take the form of
# (at least) a mention of our name, an appropriate copyright notice and a link to our
# website located at https://www.geogebra.org.
# For further details, please see https://www.geogebra.org/license
ANOVA.Syntax=[ <Lista>, <Lista>, ... ]
AffineRatio.Syntax=[ <Pont>, <Pont>, <Pont> ]
Angle.Syntax=[ <Alakzat> ]\n[ <Vektor>, <Vektor> ]\n[ <Egyenes>, <Egyenes> ]\n[ <Pont>, <Csúcspont>, <Pont> ]\n[ <Pont>, <Csúcspont>, <Szög> ]
Angle.Syntax3D=[ <Alakzat> ]\n[ <Vektor>, <Vektor> ]\n[ <Egyenes>, <Egyenes> ]\n[ <Egyenes>, <Sík> ]\n[ <Sík>, <Sík> ]\n[ <Pont>, <Csúcspont>, <Pont> ]\n[ <Pont>, <Csúcspont>, <Szög> ]\n[ <Pont>, <Pont>, <Pont>, <Irány> ]
AngularBisector.Syntax=[ <Egyenes>, <Egyenes> ]\n[ <Pont>, <Pont>, <Pont> ]
Append.Syntax=[ <Lista>, <Alakzat> ]\n[ <Alakzat>, <Lista> ]
ApplyMatrix.Syntax=[ <Mátrix>, <Alakzat> ]
Arc.Syntax=[ <Kúpszelet>, <Pont>, <Pont> ]\n[ <Kúpszelet>, <Pont>, <Pont> ]\n[ <Kúpszelet>, <Pont>, <Pont> ]\n[ <Kúpszelet>, <Pont>, <Pont> ]
AreCollinear.Syntax=[ <Pont>, <Pont>, <Pont> ]
AreConcurrent.Syntax=[ <Egyenes>, <Egyenes>, <Egyenes> ]
AreConcyclic.Syntax=[ <Pont>, <Pont>, <Pont>, <Pont> ]
AreCongruent.Syntax=[ <Alakzat>, <Alakzat> ]
AreEqual.Syntax=[ <Alakzat>, <Alakzat> ]
AreParallel.Syntax=[ <Egyenes>, <Egyenes> ]
ArePerpendicular.Syntax=[ <Egyenes>, <Egyenes> ]
Area.Syntax=[ <Kúpszelet> ]\n[ <Sokszög> ]\n[ <Pont>, ..., <Pont> ]
Assume.SyntaxCAS=[ <Feltétel>, <Kifejezés> ]
Asymptote.Syntax=[ <Alakzat> ]
AttachCopyToView.Syntax=[ <Alakzat>, <Nézet 0|1|2> ]\n[ <Alakzat>, <Nézet 0|1|2>, <Pont 1>, <Pont 2>, <Képernyő pont 1>, <Képernyő pont 2> ]
Axes.Syntax=[ <Kúpszelet> ]
Axes.Syntax3D=[ <Kúpszelet> ]\n[ <Másodrendű görbe> ]
AxisStepX.Syntax=[ ]
AxisStepY.Syntax=[ ]
BarChart.Syntax=[ <Adatok listája>, <Gyakoriságok listája> ]\n[ <Nyers adatok listája>, <Oszlopok szélessége>, <Függőleges skála tényező (opcionális)> ]\n[ <Adatok listája>, <Gyakoriságok listája>, <Oszlopok szélessége> ]\n[ <Kezdőérték>, <Végérték>, <Magasságok listája> ]\n[ <Kezdőérték>, <Végérték>, <Kifejezés>, <Változó>, <Szám mettől>, <Szám meddig> ]\n[ <Kezdőérték>, <Végérték>, <Kifejezés>, <Változó>, <Szám mettől>, <Szám meddig>, <Lépésköz> ]
Barycenter.Syntax=[ <Pontok listája>, <Súlyok listája> ]
Bernoulli.Syntax=[ <Valószínűség>, <Eloszlásfüggvény logikai értéke> ]
Binomial.Syntax=[ <Szám (n)>, <Szám (k)> ]
BinomialDist.Syntax=[ <Kísérletek száma>, <Siker valószínűsége> ]\n[ <Kísérletek száma>, <Siker valószínűsége>, <Eloszlásfüggvény logikai értéke> ]\n[ <Kísérletek száma>, <Siker valószínűsége>, <Változó értéke>, <Eloszlásfüggvény logikai értéke> ]
BinomialDist.SyntaxCAS=[ <Kísérletek száma>, <Siker valószínűsége>, <Változó értéke>, <Eloszlásfüggvény logikai értéke> ]
Bottom.Syntax=[ <Másodrendű görbe> ]
BoxPlot.Syntax=[ <yEltolás>, <yMéret>, <Nyers adatok listája> ]\n[ <yEltolás>, <yMéret>, <Nyers adatok listája>, <Kiugró értékek elhagyása (logikai érték)> ]\n[ <yEltolás>, <yMéret>, <Adatok listája>, <Gyakoriságok listája>, <Kiugró értékek elhagyása (logikai érték)> ]\n[ <yEltolás>, <yMéret>, <Kezdőérték>, <Első kvartilis>, <Medián>, <Harmadik kvartilis>, <Végérték> ]
Button.Syntax=[ ]\n[ <Felirat> ]
CASLoaded.Syntax=[]
CFactor.SyntaxCAS=[ <Kifejezés> ]\n[ <Kifejezés>, <Változó> ]
CIFactor.SyntaxCAS=[ <Kifejezés> ]\n[ <Kifejezés>, <Változó> ]
CSolutions.SyntaxCAS=[ <Egyenlet> ]\n[ <Egyenlet>, <Változó> ]\n[ <Egyenletek listája>, <Változók listája> ]
CSolve.SyntaxCAS=[ <Egyenlet> ]\n[ <Egyenlet>, <Változó> ]\n[ <Egyenletek listája>, <Változók listája> ]
Cauchy.Syntax=[ <Medián>, <Szélesség>, <Változó értéke> ]\n[ <Medián>, <Szélesség>, <Változó értéke>, <Eloszlásfüggvény logikai értéke>  ]\n[ <Medián>, <Szélesség>, x, <Eloszlásfüggvény logikai értéke> ]
Cauchy.SyntaxCAS=[ <Medián>, <Szélesség>, <Változó értéke> ]
Cell.Syntax=[ <Oszlop>, <Sor> ]
CellRange.Syntax=[ <Kezdő cella>, <Befejező cella> ]
Center.Syntax=[ <Kúpszelet> ]
Center.Syntax3D=[ <Kúpszelet> ]\n[ <Másodrendű görbe> ]
CenterView.Syntax=[ <Középpont> ]
Centroid.Syntax=[ <Sokszög> ]
Checkbox.Syntax=[ ]\n[ <Felirat> ]\n[ <Lista> ]\n[ <Felirat>, <Lista> ]
ChiSquared.Syntax=[ <Szabadságfokok>, <Változó értéke> ]\n[ <Szabadságfokok>, <Változó értéke>, <Eloszlásfüggvény logikai értéke> ]\n[ <Szabadságfokok>, x, <Eloszlásfüggvény logikai értéke> ]
ChiSquared.SyntaxCAS=[ <Szabadságfokok>, <Változó> ]
ChiSquaredTest.Syntax=[ <Mátrix> ]\n[ <Lista>, <Lista> ]\n[ <Mátrix>, <Mátrix> ]
Circle.Syntax=[ <Pont>, <Sugár> ]\n[ <Pont>, <Szakasz> ]\n[ <Pont>, <Pont> ]\n[ <Pont>, <Pont>, <Pont> ]
Circle.Syntax3D=[ <Pont>, <Sugár> ]\n[ <Pont>, <Szakasz> ]\n[ <Pont>, <Pont> ]\n[ <Pont>, <Pont>, <Pont> ]\n[ <Egyenes>, <Pont> ]\n[ <Pont>, <Sugár>, <Irány> ]\n[ <Pont>, <Pont>, <Irány> ]
CircleArc.Syntax=[ <Középpont>, <Pont>, <Pont> ]
CircleSector.Syntax=[ <Középpont>, <Pont>, <Pont> ]
CircumcircleArc.Syntax=[ <Pont>, <Pont>, <Pont> ]
CircumcircleSector.Syntax=[ <Pont>, <Pont>, <Pont> ]
Circumference.Syntax=[ <Kúpszelet> ]
Classes.Syntax=[ <Adatok listája>, <Osztályok száma> ]\n[ <Adatok listája>, <Kezdeti érték>, <Osztályok szélessége> ]
ClosestPoint.Syntax=[ <Út>, <Pont> ]\n[ <Egyenes>, <Egyenes> ]
ClosestPointRegion.Syntax=[ <Tartomány>, <Pont> ]
Coefficients.Syntax=[ <Polinom> ]\n[ <Kúpszelet> ]
Coefficients.SyntaxCAS=[ <Polinom> ]\n[ <Polinom>, <Változó> ]
Column.Syntax=[ <Cella név> ]
ColumnName.Syntax=[ <Cella név> ]
CommonDenominator.Syntax=[ <Kifejezés>, <Kifejezés> ]
CompleteSquare.Syntax=[ <Másodfokú Függvény> ]
ComplexRoot.Syntax=[ <Polinom> ]
Cone.Syntax=[ <Kúpszelet>, <Magasság> ]\n[ <Pont>, <Pont>, <Sugár> ]\n[ <Pont>, <Vektor>, <Szög> ]
ConeInfinite.Syntax=[ <Pont>, <Vektor>, <Szög> ]\n[ <Pont>, <Pont>, <Szög> ]\n[ <Pont>, <Egyenes>, <Szög> ]
Conic.Syntax=[ <Lista> ]\n[ <Pont>, <Pont>, <Pont>, <Pont>, <Pont> ]\n[ <Szám>, <Szám>, <Szám>, <Szám>, <Szám>, <Szám> ]
ConstructionStep.Syntax=[ ]\n[ <Alakzat> ]
ContingencyTable.Syntax=[ <Szöveg lista>, <Szöveg lista> ]\n[ <Szöveg lista>, <Szöveg lista>, <Opciók> ]\n[ <Sor értékek listája>, <Oszlop értékek listája>, <Gyakoriság tábla> ]\n[ <Sor értékek listája>, <Oszlop értékek listája>, <Gyakoriság tábla> , <Opciók> ]
ContinuedFraction.Syntax=[ <Szám> ]\n[ <Szám>, <Szint> ]\n[ <Szám>, <Szint>, <Eredmény listaként megadása (true|false)> ]
ConvexHull.Syntax=[ <Pontok listája> ]
CopyFreeObject.Syntax=[ <Alakzat> ]
Corner.Syntax=[ <Sarok száma> ]\n[ <Kép>, <Sarok száma> ]\n[ <Szöveg>, <Sarok száma> ]\n[ <Geometria nézet>, <Sarok száma> ]
CountIf.Syntax=[ <Feltétel>, <Lista> ]\n[ <Feltétel>, <Változó>, <Lista> ]
Covariance.Syntax=[ <Pontok listája> ]\n[ <Számok listája>, <Számok listája> ]
Cross.Syntax=[ <Vektor>, <Vektor> ]
CrossRatio.Syntax=[ <Pont>, <Pont>, <Pont>, <Pont> ]
Cube.Syntax=[ <Square> ]\n[ <Pont>, <Pont>, <Pont> ]\n[ <Pont>, <Pont>, <Irány> ]
Cubic.Syntax=[ <Pont>, <Pont>, <Pont>, <Szám> ]
Curvature.Syntax=[ <Pont>, <Alakzat> ]
CurvatureVector.Syntax=[ <Pont>, <Alakzat> ]
CurveCartesian.Syntax=[ <Kifejezés>, <Kifejezés>, <Változó>, <Kezdőérték>, <Végérték> ]
CurveCartesian.Syntax3D=[ <Kifejezés>, <Kifejezés>, <Változó>, <Kezdőérték>, <Végérték> ]\n[ <Kifejezés>, <Kifejezés>, <Kifejezés>, <Változó>, <Kezdőérték>, <Végérték> ]
Cylinder.Syntax=[ <Kúpszelet>, <Magasság> ]\n[ <Pont>, <Pont>, <Sugár> ]
CylinderInfinite.Syntax=[ <Egyenes>, <Sugár> ]\n[ <Pont>, <Vektor>, <Sugár> ]\n[ <Pont>, <Pont>, <Sugár> ]
DataFunction.Syntax=[ <Számok listája>, <Számok listája> ]
Defined.Syntax=[ <Alakzat> ]
Degree.Syntax=[ <Polinom> ]
Degree.SyntaxCAS=[ <Polinom> ]\n[ <Polinom>, <Változó> ]
DelauneyTriangulation.Syntax=[ <Pontok listája> ]
Delete.Syntax=[ <Alakzat> ]
Denominator.Syntax=[ <Szám> ]\n[ <Függvény> ]
Denominator.SyntaxCAS=[ <Kifejezés> ]
Derivative.Syntax=[ <Függvény> ]\n[ <Görbe> ]\n[ <Függvény>, <Szám> ]\n[ <Függvény>, <Változó> ]\n[ <Görbe>, <Szám> ]\n[ <Függvény>, <Változó>, <Szám> ]
Derivative.SyntaxCAS=[ <Kifejezés> ]\n[ <Kifejezés>, <Változó> ]\n[ <Kifejezés>, <Változó>, <Szám> ]
Determinant.Syntax=[ <Mátrix> ]
Diameter.Syntax=[ <Vektor>, <Kúpszelet> ]\n[ <Egyenes>, <Kúpszelet> ]
Difference.Syntax=[ <Sokszög>, <Sokszög> ]
Dilate.Syntax=[ <Alakzat>, <Nyújtási arány> ]\n[ <Alakzat>, <Nyújtási arány>, <Nyújtás középpontja> ]
Dimension.Syntax=[ <Alakzat> ]
Direction.Syntax=[ <Egyenes> ]
Directrix.Syntax=[ <Kúpszelet> ]
Distance.Syntax=[ <Pont>, <Alakzat> ]\n[ <Egyenes>, <Egyenes> ]\n[ <Sík>, <Sík> ]
Div.Syntax=[ <Osztandó szám>, <Osztó szám> ]\n[ <Osztandó polinom>, <Osztó polinom> ]
Division.Syntax=[ <Osztandó szám>, <Osztó szám> ]\n[ <Osztandó polinom>, <Osztó polinom> ]
Divisors.Syntax=[ <Szám> ]
DivisorsList.Syntax=[ <Szám> ]
DivisorsSum.Syntax=[ <Szám> ]
Dodecahedron.Syntax=[ <Regular Pentagon> ]\n[ <Pont>, <Pont>, <Pont> ]\n[ <Pont>, <Pont>, <Irány> ]
Dot.Syntax=[ <Vektor>, <Vektor> ]
DotPlot.Syntax=[ <Nyers adatok listája>, <Közeli értékek összevonása (opcionális)>, <Skála faktor (opcionális)>]
DynamicCoordinates.Syntax=[ <Pont>, <x-koordináta>, <y-koordináta> ]\n[ <Pont>, <x-koordináta>, <y-koordináta>, <z-koordináta> ]
Eccentricity.Syntax=[ <Kúpszelet> ]
Eigenvalues.SyntaxCAS=[ <Mátrix> ]
Eigenvectors.SyntaxCAS=[ <Mátrix> ]
Element.Syntax=[ <Lista>, <Elem sorszáma> ]\n[ <Mátrix>, <Sor>, <Oszlop> ]\n[ <Lista>, <Index1>, <Index2>, ... ]
Element.SyntaxCAS=[ <Lista>, <Elem sorszáma> ]\n[ <Mátrix>, <Sor>, <Oszlop> ]
Eliminate.Syntax=[ <Polinomok listája>, <Változók listája> ]
Ellipse.Syntax=[ <Fóuszpont>, <Fóuszpont>, <Főtengely hossza (szám)> ]\n[ <Fóuszpont>, <Fóuszpont>, <Szakasz> ]\n[ <Fóuszpont>, <Fóuszpont>, <Pont> ]
Ends.Syntax=[ <Másodrendű görbe> ]
Envelope.Syntax=[ <Út>, <Pont> ]
Erlang.Syntax=[ <Alakparaméter>, <Kamatráta>, <Változó értéke> ]\n[ <Alakparaméter>, <Kamatráta>, <Változó értéke>, <Eloszlásfüggvény logikai értéke> ]\n[ <Alakparaméter>, <Kamatráta>, x, <Eloszlásfüggvény logikai értéke> ]
Excentricity.Syntax=[ <Kúpszelet> ]
Execute.Syntax=[ <Szöveg lista> ]\n[ <Szöveg lista>, <Paraméter>, <Paraméter>, ... ]
Expand.Syntax=[ <Kifejezés> ]
Exponential.Syntax=[ <Lambda>, <Változó értéke> ]\n[ <Lambda>, <Változó értéke>, <Eloszlásfüggvény logikai értéke> ]\n[ <Lambda>, x, <Eloszlásfüggvény logikai értéke> ]
Exponential.SyntaxCAS=[ <Lambda>, <Változó értéke> ]
ExportImage.Syntax=[ <Tulajdonság>, <Érték>, <Tulajdonság>, <Érték>, ... ]
Extremum.Syntax=[ <Polinom> ]\n[ <Függvény>, <Kezdő x-érték>, <Lezáró x-érték> ]
FDistribution.Syntax=[ <Számláló szabadságfoka>, <Nevező szabadságfoka>, <Változó értéke> ]\n[ <Számláló szabadságfoka>, <Nevező szabadságfoka>, <Változó értéke>, <Eloszlásfüggvény logikai értéke> ]\n[ <Számláló szabadságfoka>, <Nevező szabadságfoka>, x, <Eloszlásfüggvény logikai értéke> ]
FDistribution.SyntaxCAS=[ <Számláló szabadságfoka>, <Nevező szabadságfoka>, <Változó értéke> ]
Factor.Syntax=[ <Polinom> ]
Factor.SyntaxCAS=[ <Szám> ]\n[ <Polinom> ]\n[ <Kifejezés>, <Változó> ]
Factors.Syntax=[ <Polinom> ]\n[ <Szám> ]
FillCells.Syntax=[ <Cellatartomány>, <Alakzat> ]\n[ <Kezdő cella>, <Lista> ]\n[ <Kezdő cella>, <Mátrix> ]
FillColumn.Syntax=[ <Oszlop>, <Lista> ]
FillRow.Syntax=[ <Sor>, <Lista> ]
First.Syntax=[ <Lista> ]\n[ <Szöveg> ]\n[ <Lista>, <Elemek száma> ]\n[ <Szöveg>, <Elemek száma> ]\n[ <Mértani hely>, <Elemek száma> ]
First.SyntaxCAS=[ <Lista> ]\n[ <Lista>, <Elemek száma> ]
FirstAxis.Syntax=[ <Kúpszelet> ]
FirstAxisLength.Syntax=[ <Kúpszelet> ]
Fit.Syntax=[ <Pontok listája>, <Függvény lista> ]\n[ <Pontok listája>, <Függvény> ]
FitExp.Syntax=[ <Pontok listája> ]
FitGrowth.Syntax=[ <Pontok listája> ]
FitImplicit.Syntax=[ <Pontok listája>, <Görbe rendje> ]
FitLineX.Syntax=[ <Pontok listája> ]
FitLineY.Syntax=[ <Pontok listája> ]
FitLog.Syntax=[ <Pontok listája> ]
FitLogistic.Syntax=[ <Pontok listája> ]
FitPoly.Syntax=[ <Pontok listája>, <Degree of Polynomial> ]\n[ <Freehand Function>, <Degree of Polynomial> ]
FitPow.Syntax=[ <Pontok listája> ]
FitSin.Syntax=[ <Pontok listája> ]
Flatten.Syntax=[ <Lista> ]
Focus.Syntax=[ <Kúpszelet> ]
FractionText.Syntax=[ <Szám> ]\n[ <Pont> ]
Frequency.Syntax=[ <Nyers adatok listája> ]\n[ <Eloszlásfüggvény logikai értéke>, <Nyers adatok listája> ]\n[ <Osztályok határainak listája>, <Nyers adatok listája> ]\n[ <Szöveg lista>, <Szöveg lista> ]\n[ <Eloszlásfüggvény logikai értéke>, <Osztályok határainak listája>, <Nyers adatok listája> ]\n[ <Osztályok határainak listája>, <Nyers adatok listája>, <Logikai érték (Sűrűség?)>, <Sűrűségi tényező (opcionális)> ]\n[ <Eloszlásfüggvény logikai értéke>, <Osztályok határainak listája>, <Nyers adatok listája>, <Logikai érték (Sűrűség?)>, <Sűrűségi tényező (opcionális)> ]
FrequencyPolygon.Syntax=[ <Osztályok határainak listája>, <Magasságok listája> ]\n[ <Osztályok határainak listája>, <Nyers adatok listája>, <Logikai érték (Sűrűség?)>, <Sűrűségi tényező (opcionális)> ]\n[ <Eloszlásfüggvény logikai értéke>, <Osztályok határainak listája>, <Nyers adatok listája>, <Logikai érték (Sűrűség?)>, <Sűrűségi tényező (opcionális)> ]
FrequencyTable.Syntax=[ <Nyers adatok listája>, <Skála faktor (opcionális)> ]\n[ <Eloszlásfüggvény logikai értéke>, <Nyers adatok listája> ]\n[ <Osztályok határainak listája>, <Nyers adatok listája> ]\n[ <Eloszlásfüggvény logikai értéke>, <Osztályok határainak listája>, <Nyers adatok listája> ]\n[ <Osztályok határainak listája>, <Nyers adatok listája>, <Logikai érték (Sűrűség?)>, <Sűrűségi tényező (opcionális)> ]\n[ <Eloszlásfüggvény logikai értéke>, <Osztályok határainak listája>, <Nyers adatok listája>, <Logikai érték (Sűrűség?)>, <Sűrűségi tényező (opcionális)> ]
FromBase.Syntax=[ <Szám szövegként>, <Alap> ]
Function.Syntax=[ <Függvény>, <Kezdő x-érték>, <Lezáró x-érték> ]\n[ <Számok listája> ]
Function.Syntax3D=[ <Számok listája> ]\n[ <Függvény>, <Kezdő x-érték>, <Lezáró x-érték> ]\n[ <Kifejezés>, <Változó 1>, <Kezdőérték>, <Végérték>, <Változó 2>, <Kezdőérték>, <Végérték> ]
Function.SyntaxCAS=[ <Függvény>, <Kezdő x-érték>, <Lezáró x-érték> ]
FutureValue.Syntax=[ <Kamatráta>, <Időszakok száma>, <Részlet fizetés>, <Jövő érték (opcionális)>, <Típus (opcionális)> ]
GCD.Syntax=[ <Számok listája> ]\n[ <Szám>, <Szám> ]
GCD.SyntaxCAS=[ <Számok listája> ]\n[ <Polinomok listája> ]\n[ <Szám>, <Szám> ]\n[ <Polinom>, <Polinom> ]
Gamma.Syntax=[ <Alfa>, <Beta>, <Változó értéke> ]\n[ <Alfa>, <Beta>, <Változó értéke>, <Eloszlásfüggvény logikai értéke>  ]\n[ <Alfa>, <Beta>, x, <Eloszlásfüggvény logikai értéke> ]
Gamma.SyntaxCAS=[ <Alfa>, <Beta>, <Változó értéke> ]
GeometricMean.Syntax=[ <Számok listája> ]
GetTime.Syntax=[]\n[ <Formátum> ]
GroebnerDegRevLex.Syntax=[ <Polinomok listája> ]\n[ <Polinomok listája>, <Változók listája> ]
GroebnerLex.Syntax=[ <Polinomok listája> ]\n[ <Polinomok listája>, <Változók listája> ]
GroebnerLexDeg.Syntax=[ <Polinomok listája> ]\n[ <Polinomok listája>, <Változók listája> ]
HarmonicMean.Syntax=[ <Számok listája> ]
Height.Syntax=[ <Test> ]
HideLayer.Syntax=[ <Szám> ]
Histogram.Syntax=[ <Osztályok határainak listája>, <Magasságok listája> ]\n[ <Osztályok határainak listája>, <Nyers adatok listája>, <Logikai érték (Sűrűség?)>, <Sűrűségi tényező (opcionális)> ]\n[ <Eloszlásfüggvény logikai értéke>, <Osztályok határainak listája>, <Nyers adatok listája>, <Logikai érték (Sűrűség?)>, <Sűrűségi tényező (opcionális)> ]
HistogramRight.Syntax=[ <Osztályok határainak listája>, <Magasságok listája> ]\n[ <Osztályok határainak listája>, <Nyers adatok listája>, <Logikai érték (Sűrűség?)>, <Sűrűségi tényező (opcionális)>  ]\n[ <Eloszlásfüggvény logikai értéke>, <Osztályok határainak listája>, <Nyers adatok listája>, <Logikai érték (Sűrűség?)>, <Sűrűségi tényező (opcionális)> ]
HyperGeometric.Syntax=[ <Statisztikai sokaság mérete>, <Sikeres kísérletek száma>, <Minta mérete> ]\n[ <Statisztikai sokaság mérete>, <Sikeres kísérletek száma>, <Minta mérete>, <Eloszlásfüggvény logikai értéke> ]\n[ <Statisztikai sokaság mérete>, <Sikeres kísérletek száma>, <Minta mérete>, <Változó értéke>, <Eloszlásfüggvény logikai értéke> ]
HyperGeometric.SyntaxCAS=[ <Statisztikai sokaság mérete>, <Sikeres kísérletek száma>, <Minta mérete>, <Változó értéke>, <Eloszlásfüggvény logikai értéke> ]
Hyperbola.Syntax=[ <Fóuszpont>, <Fóuszpont>, <Főtengely hossza (szám)> ]\n[ <Fóuszpont>, <Fóuszpont>, <Szakasz> ]\n[ <Fóuszpont>, <Fóuszpont>, <Pont> ]
IFactor.Syntax=[ <Polinom> ]
IFactor.SyntaxCAS=[ <Kifejezés> ]\n[ <Kifejezés>, <Változó> ]
Icosahedron.Syntax=[ <Equilateral Triangle> ]\n[ <Pont>, <Pont>, <Pont> ]\n[ <Pont>, <Pont>, <Irány> ]
Identity.Syntax=[ <Szám> ]
If.Syntax=[ <Feltétel>, <Akkor> ]\n[ <Feltétel>, <Akkor>, <Különben> ]
ImplicitCurve.Syntax=[ <Pontok listája> ]\n[ <f(x, y)> ]
ImplicitDerivative.Syntax=[ <f(x, y)> ]
ImplicitDerivative.SyntaxCAS=[ <f(x, y)> ]\n[ <Kifejezés>, <Függő változó>, <Független változó> ]
Incircle.Syntax=[ <Pont>, <Pont>, <Pont> ]
IndexOf.Syntax=[ <Alakzat>, <Lista> ]\n[ <Szöveg>, <Szöveg> ]\n[ <Alakzat>, <Lista>, <Kezdő sorszám> ]\n[ <Szöveg>, <Szöveg>, <Kezdő sorszám> ]
Insert.Syntax=[ <Lista>, <Lista>, <Pozíció> ]\n[ <Alakzat>, <Lista>, <Pozíció> ]
Integral.Syntax=[ <Függvény> ]\n[ <Függvény>, <Változó> ]\n[ <Függvény>, <Kezdő x-érték>, <Lezáró x-érték> ]\n[ <Függvény>, <Kezdő x-érték>, <Lezáró x-érték>, <Logikai érték> ]
Integral.SyntaxCAS=[ <Függvény> ]\n[ <Függvény>, <Változó> ]\n[ <Függvény>, <Kezdő x-érték>, <Lezáró x-érték> ]\n[ <Függvény>, <Változó>, <Kezdőérték>, <Végérték> ]
IntegralBetween.Syntax=[ <Függvény>, <Függvény>, <Kezdő x-érték>, <Lezáró x-érték> ]\n[ <Függvény>, <Függvény>, <Kezdő x-érték>, <Lezáró x-érték>, <Logikai érték> ]
IntegralBetween.SyntaxCAS=[ <Függvény>, <Függvény>, <Kezdő x-érték>, <Lezáró x-érték> ]\n[ <Függvény>, <Függvény>, <Változó>, <Kezdőérték>, <Végérték> ]
IntegralSymbolic.Syntax=[ <Függvény> ]\n[ <Függvény>, <Változó> ]
InteriorAngles.Syntax=[ <Sokszög> ]
Intersect.Syntax=[ <Alakzat>, <Alakzat> ]\n[ <Alakzat>, <Alakzat>, <Metszéspont száma> ]\n[ <Alakzat>, <Alakzat>, <Kezdőpont> ]\n[ <Függvény>, <Függvény>, <Kezdő x-érték>, <Lezáró x-érték> ]\n[ <Görbe 1>, <Görbe 2>, <Paraméter 1>, <Paraméter 2> ]
Intersect.SyntaxCAS=[ <Függvény>, <Függvény> ]
IntersectConic.Syntax=[ <Sík>, <Másodrendű görbe> ]\n[ <Másodrendű görbe>, <Másodrendű görbe> ]
IntersectPath.Syntax=[ <Egyenes>, <Sokszög> ]\n[ <Sokszög>, <Sokszög> ]
IntersectPath.Syntax3D=[ <Egyenes>, <Sokszög> ]\n[ <Sokszög>, <Sokszög> ]\n[ <Sík>, <Sokszög> ]\n[ <Sík>, <Másodrendű görbe> ]
Intersection.Syntax=[ <Lista>, <Lista> ]
InverseBinomial.Syntax=[ <Kísérletek száma>, <Siker valószínűsége>, <Valószínűség> ]
InverseCauchy.Syntax=[ <Medián>, <Szélesség>, <Valószínűség> ]
InverseChiSquared.Syntax=[ <Szabadságfokok>, <Valószínűség> ]
InverseExponential.Syntax=[ <Lambda>, <Valószínűség> ]
InverseFDistribution.Syntax=[ <Számláló szabadságfoka>, <Nevező szabadságfoka>, <Valószínűség> ]
InverseGamma.Syntax=[ <Alfa>, <Beta>, <Valószínűség> ]
InverseHyperGeometric.Syntax=[ <Statisztikai sokaság mérete>, <Sikeres kísérletek száma>, <Minta mérete>, <Valószínűség> ]
InverseLaplace.Syntax=[ <Függvény> ]\n[ <Függvény>, <Változó> ]\n[ <Függvény>, <Változó>, <Változó> ]
InverseLogNormal.Syntax=[ <Középérték>, <Szórás>, <Valószínűség> ]
InverseLogistic.Syntax=[ <Középérték>, <Szélesség>, <Valószínűség> ]
InverseNormal.Syntax=[ <Középérték>, <Szórás>, <Valószínűség> ]
InversePascal.Syntax=[ <n>, <p>, <Valószínűség> ]
InversePoisson.Syntax=[ <Középérték>, <Valószínűség> ]
InverseTDistribution.Syntax=[ <Szabadságfokok>, <Valószínűség> ]
InverseWeibull.Syntax=[ <Alakparaméter>, <Szélesség>, <Valószínűség> ]
InverseZipf.Syntax=[ <Elemek száma>, <Kitevő>, <Valószínűség> ]
Invert.Syntax=[ <Mátrix> ]\n[ <Függvény> ]
IsFactored.Syntax=[ <Polinom> ]
IsInRegion.Syntax=[ <Pont>, <Tartomány> ]
IsInteger.Syntax=[ <Szám> ]
IsPrime.Syntax=[ <Szám> ]
IsTangent.Syntax=[ <Egyenes>, <Kúpszelet> ]
IsVertexForm.Syntax=[ <Függvény> ]
Iteration.Syntax=[ <Függvény>, <Kezdőérték>, <Iterációk száma> ]\n[ <Kifejezés>, <Változók>, <Kezdőérték>, <Lépésszám> ]
IterationList.Syntax=[ <Függvény>, <Kezdőérték>, <Iterációk száma> ]\n[ <Kifejezés>, <Változók>, <Kezdőérték>, <Lépésszám> ]
Join.Syntax=[ <Listák listája> ]\n[ <Lista>, <Lista>, ... ]
JordanDiagonalization.SyntaxCAS=[ <Mátrix> ]
KeepIf.Syntax=[ <Feltétel>, <Lista> ]\n[ <Feltétel>, <Változó>, <Lista> ]
LCM.Syntax=[ <Számok listája> ]\n[ <Szám>, <Szám> ]
LCM.SyntaxCAS=[ <Számok listája> ]\n[ <Polinomok listája> ]\n[ <Szám>, <Szám> ]\n[ <Polinom>, <Polinom> ]
LaTeX.Syntax=[ <Alakzat> ]\n[ <Alakzat>, <Változók behelyettesítése - logikai érték> ]\n[ <Alakzat>, <Változók behelyettesítése - logikai érték>, <Nevek megjelenítése - logikai érték> ]
Laplace.Syntax=[ <Függvény> ]\n[ <Függvény>, <Változó> ]\n[ <Függvény>, <Változó>, <Változó> ]
Last.Syntax=[ <Lista> ]\n[ <Szöveg> ]\n[ <Lista>, <Elemek száma> ]\n[ <Szöveg>, <Elemek száma> ]
Last.SyntaxCAS=[ <Lista> ]\n[ <Lista>, <Elemek száma> ]
LeftSide.Syntax=[ <Egyenlet> ]
LeftSide.SyntaxCAS=[ <Egyenlet> ]\n[ <Egyenletek listája> ]\n[ <Egyenletek listája>, <Sorszám> ]
LeftSum.Syntax=[ <Függvény>, <Kezdő x-érték>, <Lezáró x-érték>, <Téglalapok száma> ]
Length.Syntax=[ <Alakzat> ]\n[ <Függvény>, <Kezdő x-érték>, <Lezáró x-érték> ]\n[ <Függvény>, <Kezdőpont>, <Végpont> ]\n[ <Görbe>, <Kezdő t-érték>, <Lezáró t-érték> ]\n[ <Görbe>, <Kezdőpont>, <Végpont> ]
Length.SyntaxCAS=[ <Lista> ]\n[ <Függvény>, <Kezdő x-érték>, <Lezáró x-érték> ]\n[ <Függvény>, <Változó>, <Kezdő x-érték>, <Lezáró x-érték> ]
LetterToUnicode.Syntax=[ <Betű> ]
Limit.Syntax=[ <Függvény>, <Érték> ]
Limit.SyntaxCAS=[ <Kifejezés>, <Érték> ]\n[ <Kifejezés>, <Változó>, <Érték> ]
LimitAbove.Syntax=[ <Függvény>, <Érték> ]
LimitAbove.SyntaxCAS=[ <Kifejezés>, <Érték> ]\n[ <Kifejezés>, <Változó>, <Érték> ]
LimitBelow.Syntax=[ <Függvény>, <Érték> ]
LimitBelow.SyntaxCAS=[ <Kifejezés>, <Érték> ]\n[ <Kifejezés>, <Változó>, <Érték> ]
Line.Syntax=[ <Pont>, <Pont> ]\n[ <Pont>, <Párhuzamos egyenes> ]\n[ <Pont>, <Irányvektor> ]
LineBisector.Syntax=[ <Szakasz> ]\n[ <Pont>, <Pont> ]
LineBisector.Syntax3D=[ <Szakasz> ]\n[ <Pont>, <Pont> ]\n[ <Pont>, <Pont>, <Irány> ]
LineGraph.Syntax=[ <X értékek listája>, <Y értékek listája> ]
Locus.Syntax=[ <Pont a mértani hely kirajzolásához>, <Pont> ]\n[ <Pont a mértani hely kirajzolásához>, <Csúszka> ]\n[ <Iránymező>, <Pont> ]\n[ <f(x, y)>, <Pont> ]
LocusEquation.Syntax=[ <Mértani hely> ]\n[ <Mértani hely pontja>, <Mozgó pont> ]\n[ <Logikai kifejezés>, <Mozgó pont> ]
LogNormal.Syntax=[ <Középérték>, <Szórás>, <Változó értéke> ]\n[ <Középérték>, <Szórás>, <Változó értéke>, <Eloszlásfüggvény logikai értéke>  ]\n[ <Középérték>, <Szórás>, x, <Eloszlásfüggvény logikai értéke> ]
Logistic.Syntax=[ <Középérték>, <Szélesség>, <Változó értéke> ]\n[ <Középérték>, <Szélesség>, <Változó értéke>, <Eloszlásfüggvény logikai értéke>  ]\n[ <Középérték>, <Szélesség>, x, <Eloszlásfüggvény logikai értéke> ]
LowerSum.Syntax=[ <Függvény>, <Kezdő x-érték>, <Lezáró x-érték>, <Téglalapok száma> ]
MatrixRank.Syntax=[ <Mátrix> ]
Max.Syntax=[ <Intervallum> ]\n[ <Szám>, <Szám> ]\n[ <Lista> ]\n[ <Adatok listája>, <Gyakoriságok listája> ]\n[ <Függvény>, <Kezdő x-érték>, <Lezáró x-érték> ]
Max.SyntaxCAS=[ <Lista> ]\n[ <Szám>, <Szám> ]
Maximize.Syntax=[ <Függő szám>, <Szabad szám> ]\n[ <Függő szám>, <Mozgó pont> ]
Mean.Syntax=[ <Nyers adatok listája> ]\n[ <Számok listája>, <Gyakoriságok listája> ]
Mean.SyntaxCAS=[ <Számok listája> ]
MeanX.Syntax=[ <Pontok listája> ]
MeanY.Syntax=[ <Pontok listája> ]
Median.Syntax=[ <Nyers adatok listája> ]\n[ <Számok listája>, <Gyakoriságok listája> ]
Median.SyntaxCAS=[ <Számok listája> ]
Midpoint.Syntax=[ <Szakasz> ]\n[ <Kúpszelet> ]\n[ <Intervallum> ]\n[ <Pont>, <Pont> ]
Min.Syntax=[ <Intervallum> ]\n[ <Szám>, <Szám> ]\n[ <Lista> ]\n[ <Adatok listája>, <Gyakoriságok listája> ]\n[ <Függvény>, <Kezdő x-érték>, <Lezáró x-érték> ]
Min.SyntaxCAS=[ <Lista> ]\n[ <Szám>, <Szám> ]
Minimize.Syntax=[ <Függő szám>, <Szabad szám> ]\n[ <Függő szám>, <Mozgó pont> ]
MinimumSpanningTree.Syntax=[ <Pontok listája> ]
Mirror.Syntax=[ <Alakzat>, <Pont> ]\n[ <Alakzat>, <Egyenes> ]\n[ <Alakzat>, <Kúpszelet> ]
Mirror.Syntax3D=[ <Alakzat>, <Pont> ]\n[ <Alakzat>, <Egyenes> ]\n[ <Alakzat>, <Sík> ]\n[ <Alakzat>, <Kúpszelet> ]
MixedNumber.SyntaxCAS=[ <Szám> ]
Mod.Syntax=[ <Osztandó szám>, <Osztó szám> ]\n[ <Osztandó polinom>, <Osztó polinom> ]
Mode.Syntax=[ <Számok listája> ]
NDerivative.Syntax=[ <Függvény> ]\n[ <Függvény>, <Görbe rendje> ]
NIntegral.Syntax=[ <Függvény> ]\n[ <Függvény>, <Kezdő x-érték>, <Lezáró x-érték> ]
NIntegral.SyntaxCAS=[ <Függvény>, <Kezdő x-érték>, <Lezáró x-érték> ]\n[ <Függvény>, <Változó>, <Kezdőérték>, <Végérték> ]
NInvert.Syntax=[ <Függvény> ]
NSolutions.Syntax=[ <Egyenlet> ]
NSolutions.SyntaxCAS=[ <Egyenlet> ]\n[ <Egyenlet>, <Változó> ]\n[ <Egyenlet>, <Változó=Kezdőérték> ]\n[ <Egyenletek listája>, <Változók listája> ]
NSolve.Syntax=[ <Egyenlet> ]
NSolve.SyntaxCAS=[ <Egyenlet> ]\n[ <Egyenlet>, <Változó> ]\n[ <Egyenlet>, <Változó=Kezdőérték> ]\n[ <Egyenletek listája>, <Változók listája> ]
NSolveODE.Syntax=[ <Deriváltak listája>, <Kezdő x-koordináta>, <Kezdeti y-koordináták listája>, <Végső  x-koordináta> ]
Name.Syntax=[ <Alakzat> ]
Net.Syntax=[ <Poliéder>, <Szám> ]\n[ <Poliéder>, <Szám>, <Felület>, <Csúcs>, <Csúcs>, ... ]
NextPrime.Syntax=[ <Szám> ]
Normal.Syntax=[ <Középérték>, <Szórás>, <Változó értéke> ]\n[ <Középérték>, <Szórás>, <Változó értéke>, <Eloszlásfüggvény logikai értéke> ]\n[ <Középérték>, <Szórás>, x, <Eloszlásfüggvény logikai értéke> ]
Normal.SyntaxCAS=[ <Középérték>, <Szórás>, <Változó értéke> ]
NormalQuantilePlot.Syntax=[ <Nyers adatok listája> ]
Normalize.Syntax=[ <Számok listája> ]\n[ <Pontok listája> ]
Numerator.Syntax=[ <Szám> ]\n[ <Függvény> ]
Numerator.SyntaxCAS=[ <Kifejezés> ]
Numeric.SyntaxCAS=[ <Kifejezés> ]\n[ <Kifejezés>, <Pontosság> ]
Object.Syntax=[ <Alakzat neve szövegként (idézőjelek között)> ]
Octahedron.Syntax=[ <Equilateral Triangle> ]\n[ <Pont>, <Pont>, <Pont> ]\n[ <Pont>, <Pont>, <Irány> ]
Ordinal.Syntax=[ <Egész> ]
OrdinalRank.Syntax=[ <Lista> ]
OrthogonalLine.Syntax=[ <Pont>, <Egyenes> ]\n[ <Pont>, <Szakasz> ]\n[ <Pont>, <Vektor> ]
OrthogonalLine.Syntax3D=[ <Pont>, <Egyenes> ]\n[ <Pont>, <Szakasz> ]\n[ <Pont>, <Vektor> ]\n[ <Pont>, <Sík> ]\n[ <Egyenes>, <Egyenes> ]\n[ <Pont>, <Irány>, <Irány> ]\n[ <Pont>, <Egyenes>, <Context> ]
OrthogonalPlane.Syntax=[ <Pont>, <Egyenes> ]\n[ <Pont>, <Vektor> ]
OrthogonalVector.Syntax=[ <Egyenes> ]\n[ <Szakasz> ]\n[ <Vektor> ]
OrthogonalVector.Syntax3D=[ <Egyenes> ]\n[ <Szakasz> ]\n[ <Vektor> ]\n[ <Sík> ]
OrthogonalVector.SyntaxCAS=[ <Vektor> ]
OsculatingCircle.Syntax=[ <Pont>, <Alakzat> ]
PMCC.Syntax=[ <Pontok listája> ]\n[ <X értékek listája>, <Y értékek listája> ]
Pan.Syntax=[ <x>, <y> ]
Pan.Syntax3D=[ <x>, <y> ]\n[ <x>, <y>, <z> ]
Parabola.Syntax=[ <Pont>, <Egyenes> ]
Parameter.Syntax=[ <Kúpszelet> ]
ParametricDerivative.Syntax=[ <Görbe> ]
ParseToFunction.Syntax=[ <Függvény>, <Kifejezés (idézőjelek között)> ]
ParseToNumber.Syntax=[ <Szám>, <Kifejezés (idézőjelek között)> ]
PartialFractions.Syntax=[ <Függvény> ]
PartialFractions.SyntaxCAS=[ <Függvény> ]\n[ <Függvény>, <Változó> ]
Pascal.Syntax=[ <n>, <p> ]\n[ <n>, <p>, <Eloszlásfüggvény logikai értéke> ]\n[ <n>, <p>, <Változó értéke>, <Eloszlásfüggvény logikai értéke> ]
Pascal.SyntaxCAS=[ <n>, <p>, <Változó értéke>, <Eloszlásfüggvény logikai értéke> ]
PathParameter.Syntax=[ <Az út egy ponja> ]
Payment.Syntax=[ <Kamatráta>, <Időszakok száma>, <Jelen érték>, <Jövő érték (opcionális)>, <Típus (opcionális)> ]
Percentile.Syntax=[ <Számok listája>, <Százalék (törtként)> ]
Perimeter.Syntax=[ <Sokszög> ]\n[ <Kúpszelet> ]\n[ <Mértani hely> ]
Periods.Syntax=[ <Kamatráta>, <Részlet fizetés>, <Jelen érték>, <Jövő érték (opcionális)>, <Típus (opcionális)> ]
PieChart.Syntax=[ <Gyakoriságok listája> ]\n[ <Gyakoriságok listája>, <Center>, <Sugár> ]
Plane.Syntax=[ <Sokszög> ]\n[ <Kúpszelet> ]\n[ <Pont>, <Sík> ]\n[ <Pont>, <Egyenes> ]\n[ <Egyenes>, <Egyenes> ]\n[ <Pont>, <Pont>, <Pont> ]\n[ <Pont>, <Vektor>, <Vektor> ]
PlaneBisector.Syntax=[ <Szakasz> ]\n[ <Pont>, <Pont> ]
PlaySound.Syntax=[ <Fájl> ]\n[ <Logikai érték lejátszáshoz> ]\n[ <Függvény>, <Kezdőérték>, <Végérték> ]\n[ <Függvény>, <Kezdőérték>, <Végérték>, <Mintavétel sűrűsége>, <Mintavétel mélysége> ]
PlotSolve.Syntax=[ <Equation in x> ]
Point.Syntax=[ <Alakzat> ]\n[ <Alakzat>, <Paraméter> ]\n[ <Pont>, <Vektor> ]\n[ <Lista> ]
PointIn.Syntax=[ <Tartomány> ]
PointList.Syntax=[ <Lista> ]
Poisson.Syntax=[ <Középérték> ]\n[ <Középérték>, <Eloszlásfüggvény logikai értéke> ]\n[ <Középérték>, <Változó értéke>, <Eloszlásfüggvény logikai értéke> ]
Poisson.SyntaxCAS=[ <Középérték>, <Változó értéke>, <Eloszlásfüggvény logikai értéke> ]
Polar.Syntax=[ <Pont>, <Kúpszelet> ]\n[ <Egyenes>, <Kúpszelet> ]
PolyLine.Syntax=[ <Pontok listája> ]\n[ <Pont>, ..., <Pont> ]
Polygon.Syntax=[ <Pontok listája> ]\n[ <Pont>, ..., <Pont> ]\n[ <Pont>, <Pont>, <Csúcsok száma> ]
Polygon.Syntax3D=[ <Pontok listája> ]\n[ <Pont>, ..., <Pont> ]\n[ <Pont>, <Pont>, <Csúcsok száma> ]\n[ <Pont>, <Pont>, <Csúcsok száma>, <Irány> ]
Polynomial.Syntax=[ <Függvény> ]\n[ <Pontok listája> ]
Polynomial.SyntaxCAS=[ <Függvény> ]\n[ <Függvény>, <Változó> ]
PresentValue.Syntax=[ <Kamatráta>, <Időszakok száma>, <Részlet fizetés>, <Jövő érték (opcionális)>, <Típus (opcionális)> ]
PreviousPrime.Syntax=[ <Szám> ]
PrimeFactors.Syntax=[ <Szám> ]
Prism.Syntax=[ <Sokszög>, <Pont> ]\n[ <Sokszög>, <Magasság> ]\n[ <Pont>, <Pont>, ... ]
Product.Syntax=[ <Nyers adatok listája> ]\n[ <Számok listája>, <Elemek száma> ]\n[ <Számok listája>, <Gyakoriságok listája> ]\n[ <Kifejezés>, <Változó>, <Kezdőérték>, <Végérték> ]
Product.SyntaxCAS=[ <Kifejezések listája> ]\n[ <Kifejezés>, <Változó>, <Kezdő sorszám>, <Záró sorszám> ]
Prove.Syntax=[ <Logikai kifejezés> ]
ProveDetails.Syntax=[ <Logikai kifejezés> ]
Pyramid.Syntax=[ <Sokszög>, <Pont> ]\n[ <Sokszög>, <Magasság> ]\n[ <Pont>, <Pont>, <Pont>, <Pont>, ... ]
Q1.Syntax=[ <Nyers adatok listája> ]\n[ <Számok listája>, <Gyakoriságok listája> ]
Q3.Syntax=[ <Nyers adatok listája> ]\n[ <Számok listája>, <Gyakoriságok listája> ]
QuadricSide.Syntax=[ <Másodrendű görbe> ]
RSquare.Syntax=[ <Pontok listája>, <Függvény> ]
Radius.Syntax=[ <Kúpszelet> ]
Random.Syntax=[ <Legkisebb érték(egész szám)>, <Legnagyobb érték(egész szám> ]\n[ <Legkisebb érték(egész szám)>, <Legnagyobb érték(egész szám>, <Logikai konstans> ]
Random.SyntaxCAS=[ <Legkisebb érték(egész szám)>, <Legnagyobb érték(egész szám> ]
RandomBinomial.Syntax=[ <Kísérletek száma>, <Valószínűség> ]
RandomDiscrete.Syntax=[ <Lista>, <Lista> ]
RandomElement.Syntax=[ <Lista> ]
RandomNormal.Syntax=[ <Középérték>, <Szórás> ]
RandomPointIn.Syntax=[ <Tartomány> ]\n[ <Pontok listája> ]\n[ <xMin>, <xMax>, <yMin>, <yMax> ]
RandomPoisson.Syntax=[ <Középérték> ]
RandomPolynomial.Syntax=[ <Fokszám>, <Együtthatók minimuma>, <Együtthatók maximuma> ]
RandomPolynomial.SyntaxCAS=[ <Fokszám>, <Együtthatók minimuma>, <Együtthatók maximuma> ]\n[ <Változó>, <Fokszám>, <Együtthatók minimuma>, <Együtthatók maximuma> ]
RandomUniform.Syntax=[ <Minimum>, <Maximum> ]\n[ <Minimum>, <Maximum>, <Minták száma> ]
Rate.Syntax=[ <Időszakok száma>, <Részlet fizetés>, <Jelen érték>, <Jövő érték (opcionális)>, <Típus (opcionális)>, <Becslés (opcionális)> ]
Rationalize.SyntaxCAS=[ <Szám> ]
Ray.Syntax=[ <Kezdőpont>, <Pont> ]\n[ <Kezdőpont>, <Irányvektor> ]
ReadText.Syntax=[ <Szöveg> ]
RectangleSum.Syntax=[ <Függvény>, <Kezdő x-érték>, <Lezáró x-érték>, <Téglalapok száma>, <Téglalapok magasságának aránya> ]
ReducedRowEchelonForm.Syntax=[ <Mátrix> ]
Relation.Syntax=[ <Lista> ]\n[ <Alakzat>, <Alakzat> ]
RemovableDiscontinuity.Syntax=[ <Függvény> ]
Remove.Syntax=[ <Lista>, <Lista> ]
RemoveUndefined.Syntax=[ <Lista> ]
Rename.Syntax=[ <Alakzat>, <Név> ]
Repeat.Syntax=[ <Szám>, <Parancs>, <Parancs>, ... ]
ReplaceAll.Syntax=[ <Szöveg>, <Text to Match>, <Text to Replace> ]
ResidualPlot.Syntax=[ <Pontok listája>, <Függvény> ]
Reverse.Syntax=[ <Lista> ]
RightSide.Syntax=[ <Egyenlet> ]
RightSide.SyntaxCAS=[ <Egyenlet> ]\n[ <Egyenletek listája> ]\n[ <Egyenletek listája>, <Sorszám> ]
RigidPolygon.Syntax=[ <Sokszög> ]\n[ <Sokszög>, <x eltolás>, <y eltolás> ]\n[ <Szabad pont>, ..., <Szabad pont> ]
Root.Syntax=[ <Polinom> ]\n[ <Függvény>, <Kezdő x -rték> ]\n[ <Függvény>, <Kezdő x-érték>, <Lezáró x-érték> ]
Root.SyntaxCAS=[ <Polinom> ]
RootList.Syntax=[ <Lista> ]
RootMeanSquare.Syntax=[ <Számok listája> ]
Roots.Syntax=[ <Függvény>, <Kezdő x-érték>, <Lezáró x-érték> ]
Rotate.Syntax=[ <Alakzat>, <Szög> ]\n[ <Alakzat>, <Szög>, <Pont> ]
Rotate.Syntax3D=[ <Alakzat>, <Szög> ]\n[ <Alakzat>, <Szög>, <Pont> ]\n[ <Alakzat>, <Szög>, <Forgatási tengely> ]\n[ <Alakzat>, <Szög>, <Pont a tengelyen>, <Tengely iránya vagy sík> ]
RotateText.Syntax=[ <Szöveg>, <Szög> ]
Row.Syntax=[ <Cella név> ]
RunClickScript.Syntax=[ <Alakzat> ]
RunUpdateScript.Syntax=[ <Alakzat> ]
SDX.Syntax=[ <Pontok listája> ]
SDY.Syntax=[ <Pontok listája> ]
SVD.Syntax=[ <Mátrix> ]
SXX.Syntax=[ <Számok listája> ]\n[ <Pontok listája> ]
SXY.Syntax=[ <Pontok listája> ]\n[ <Számok listája>, <Számok listája> ]
SYY.Syntax=[ <Pontok listája> ]
Sample.Syntax=[ <Lista>, <Elemszám> ]\n[ <Lista>, <Elemszám>, <Logikai érték ismétlődésre> ]
SampleSD.SyntaxCAS=[ <Számok listája> ]
SampleSDX.Syntax=[ <Pontok listája> ]
SampleSDY.Syntax=[ <Pontok listája> ]
SampleVariance.Syntax=[ <Nyers adatok listája> ]\n[ <Számok listája>, <Gyakoriságok listája> ]
SampleVariance.SyntaxCAS=[ <Számok listája> ]
ScientificText.Syntax=[ <Szám> ]\n[ <Szám>, <Értékes jegyek száma> ]
SecondAxis.Syntax=[ <Kúpszelet> ]
SecondAxisLength.Syntax=[ <Kúpszelet> ]
Sector.Syntax=[ <Kúpszelet>, <Pont>, <Pont> ]\n[ <Kúpszelet>, <Pont>, <Pont> ]
Segment.Syntax=[ <Pont>, <Pont> ]\n[ <Pont>, <Szám> ]
SelectObjects.Syntax=[ ]\n[ <Alakzat>, <Alakzat>, ... ]
SelectedElement.Syntax=[ <Lista> ]
SelectedIndex.Syntax=[ <Lista> ]
Semicircle.Syntax=[ <Pont>, <Pont> ]
Sequence.Syntax=[ <Végérték> ]\n[ <Kezdőérték>, <Végérték> ]\n[ <Kezdőérték>, <Végérték>, <Lépésköz> ]\n[ <Kifejezés>, <Változó>, <Kezdőérték>, <Végérték> ]\n[ <Kifejezés>, <Változó>, <Kezdőérték>, <Végérték>, <Lépésköz> ]
SetActiveView.Syntax=[ <Nézet> ]\n[ <Sík> ]
SetAxesRatio.Syntax=[ <Szám>, <Szám> ]
SetAxesRatio.Syntax3D=[ <Szám>, <Szám> ]\n[ <Szám>, <Szám>, <Szám> ]
SetBackgroundColor.Syntax=[ <Szín> ]\n[ <Alakzat>, <Szín> ]\n[ <Piros>, <Zöld>, <Kék> ]\n[ <Alakzat>, <Piros>, <Zöld>, <Kék> ]
SetCaption.Syntax=[ <Alakzat>, <Szöveg> ]
SetColor.Syntax=[ <Alakzat>, <Szín> ]\n[ <Alakzat>, <Piros>, <Zöld>, <Kék> ]
SetConditionToShowObject.Syntax=[ <Alakzat>, <Feltétel> ]
SetConstructionStep.Syntax=[ <Szám> ]
SetCoords.Syntax=[ <Alakzat>, <x>, <y> ]\n[ <Alakzat>, <x>, <y>, <z> ]
SetDecoration.Syntax=[ <Alakzat>, <Szám> ]
SetDynamicColor.Syntax=[ <Alakzat>, <Piros>, <Zöld>, <Kék> ]\n[ <Alakzat>, <Piros>, <Zöld>, <Kék>, <Átlátszatlanság> ]
SetFilling.Syntax=[ <Alakzat>, <Szám> ]
SetFixed.Syntax=[ <Alakzat>, <igaz I hamis> ]\n[ <Alakzat>, <igaz I hamis>, <igaz I hamis> ]
SetLabelMode.Syntax=[ <Alakzat>, <Szám> ]
SetLayer.Syntax=[ <Alakzat>, <Sík> ]
SetLevelOfDetail.Syntax=[ <Felület>, <Részletezettség foka> ]
SetLineStyle.Syntax=[ <Alakzat>, <Szám> ]
SetLineThickness.Syntax=[ <Alakzat>, <Szám> ]
SetPerspective.Syntax=[ <Szöveg> ]
SetPointSize.Syntax=[ <Alakzat>, <Szám> ]
SetPointStyle.Syntax=[ <Pont>, <Szám> ]
SetSeed.Syntax=[ <Egész> ]
SetSpinSpeed.Syntax=[ <Szám> ]
SetTooltipMode.Syntax=[ <Alakzat>, <Szám> ]
SetTrace.Syntax=[ <Alakzat>, <igaz I hamis> ]
SetValue.Syntax=[ <Logikai>, <0|1> ]\n[ <Alakzat>, <Alakzat> ]\n[ <Lista>, <Szám>, <Alakzat> ]
SetViewDirection.Syntax=[ ]\n[ <Irány> ]\n[ <Irány>, <Animáció - logikai érték> ]
SetVisibleInView.Syntax=[ <Alakzat>, <Rajzlap1l2>, <Logikai> ]
Shear.Syntax=[ <Alakzat>, <Egyenes>, <Arány> ]
ShortestDistance.Syntax=[ <Szakaszok listája>, <Kezdőpont>, <Végpont>, <Logikai érték súlyozáshoz> ]
ShowAxes.Syntax=[]\n[ <Logikai> ]\n[ <Nézet>, <Logikai> ]
ShowGrid.Syntax=[]\n[ <Logikai> ]\n[ <Nézet>, <Logikai> ]
ShowLabel.Syntax=[ <Alakzat>, <Logikai> ]
ShowLayer.Syntax=[ <Szám> ]
Shuffle.Syntax=[ <Lista> ]
SigmaXX.Syntax=[ <Pontok listája> ]\n[ <Nyers adatok listája> ]\n[ <Számok listája>, <Gyakoriságok listája> ]
SigmaXY.Syntax=[ <Pontok listája> ]\n[ <X értékek listája>, <Y értékek listája> ]
SigmaYY.Syntax=[ <Pontok listája> ]
Simplify.Syntax=[ <Függvény> ]\n[ <Szöveg> ]
Simplify.SyntaxCAS=[ <Függvény> ]
Slider.Syntax=[ <Minimum>, <Maximum>, <Lépésköz>, <Speed>, <Width>, <Is Angle>, <Horizontal>, <Animating>, <Random> ]
Slope.Syntax=[ <Egyenes> ]
SlopeField.Syntax=[ <f(x, y)> ]\n[ <f(x, y)>, <Szám (n)> ]\n[ <f(x, y)>, <Szám (n)>, <Hossz szorzója> ]\n[ <f(x, y)>, <Szám (n)>, <Hossz szorzója>, <Min x>, <Min y>, <Max x>, <Max y> ]
SlowPlot.Syntax=[ <Függvény> ]\n[ <Függvény>, <Ismétlés - logikai érték> ]
Solutions.Syntax=[ <Egyenlet> ]
Solutions.SyntaxCAS=[ <Egyenlet> ]\n[ <Egyenlet>, <Változó> ]\n[ <Egyenletek listája>, <Változók listája> ]
Solve.Syntax=[ <Egyenlet> ]
Solve.SyntaxCAS=[ <Equation in x> ]\n[ <Egyenlet>, <Változó> ]\n[ <Egyenletek listája>, <Változók listája> ]\n[ <List of Parametric Equations>, <Változók listája> ]\n[ <Egyenlet>, <Változó>, <List of assumptions> ]
SolveCubic.SyntaxCAS=[ <Harmadfokú polinom> ]
SolveODE.Syntax=[ <f'(x, y)> ]\n[ <f'(x, y)>, <Pont f-en> ]\n[ <f'(x, y)>, <Kezdő x érték>, <Kezdő y érték>, <Záró x érték>, <Lépésköz> ]\n[ <y'>, <x'>, <Kezdő x érték>, <Kezdő y érték>, <Záró t érték>, <Lépésköz> ]\n[ <b(x)>, <c(x)>, <f(x)>, <Kezdő x érték>, <Kezdő y érték>, <Kezdő y' érték>, <Záró x érték>, <Lépésköz> ]
SolveODE.SyntaxCAS=[ <Egyenlet> ]\n[ <Egyenlet>, <Point(s) on f> ]\n[ <Egyenlet>, <Point(s) on f>, <Point(s) on f'> ]\n[ <Egyenlet>, <Függő változó>, <Független változó>, <Point(s) on f> ] \n[ <Egyenlet>, <Függő változó>, <Független változó>, <Point(s) on f>, <Point(s) on f'> ]
SolveQuartic.SyntaxCAS=[ <Negyedfokú polinom> ]
Sort.Syntax=[ <Lista> ]\n[ <Értékek>, <Kulcsok> ]
Spearman.Syntax=[ <Pontok listája> ]\n[ <Számok listája>, <Számok listája> ]
Sphere.Syntax=[ <Pont>, <Sugár> ]\n[ <Pont>, <Pont> ]
Spline.Syntax=[ <Pontok listája> ]\n[ <Pontok listája>, <Order ≥ 3> ]\n[ <Pontok listája>, <Order ≥ 3>, <Weight Function> ]
Split.Syntax=[ <Szöveg>, <List of Texts to split on> ]
StartAnimation.Syntax=[ ]\n[ <Logikai> ]\n[ <Csúszka vagy pont>, <Csúszka vagy pont>, ... ]\n[ <Csúszka vagy pont>, <Csúszka vagy pont>, ..., <Logikai> ]
StartRecord.Syntax=[ ]\n[ <Logikai> ]
StemPlot.Syntax=[ <Lista> ]\n[ <Lista>, <Igazítás -1|0|1> ]
StepGraph.Syntax=[ <Pontok listája> ]\n[ <Pontok listája>, <y-koordináták listája> ]\n[ <X értékek listája>, <Y értékek listája> ]\n[ <Pontok listája>, <y-koordináták listája>, <Pont stílusa> ]\n[ <X értékek listája>, <Y értékek listája>, <y-koordináták listája> ]\n[ <X értékek listája>, <Y értékek listája>, <y-koordináták listája>, <Pont stílusa> ]
StickGraph.Syntax=[ <Pontok listája> ]\n[ <Pontok listája>, <Logikai érték (Vízszintes?)> ]\n[ <X értékek listája>, <Y értékek listája> ]\n[ <X értékek listája>, <Y értékek listája>, <Logikai érték (Vízszintes?)> ]
Stretch.Syntax=[ <Alakzat>, <Vektor> ]\n[ <Alakzat>, <Egyenes>, <Arány> ]
Substitute.SyntaxCAS=[ <Kifejezés>, <Csere lista> ]\n[ <Kifejezés>, <Mit>, <Mire> ]
Sum.Syntax=[ <Lista> ]\n[ <Lista>, <Elemek száma> ]\n[ <Lista>, <Gyakoriságok listája> ]\n[ <Kifejezés>, <Változó>, <Kezdőérték>, <Végérték> ]
Sum.SyntaxCAS=[ <Lista> ]\n[ <Kifejezés>, <Változó>, <Kezdőérték>, <Végérték> ]
SumSquaredErrors.Syntax=[ <Pontok listája>, <Függvény> ]
SurdText.Syntax=[ <Pont> ]\n[ <Szám> ]\n[ <Szám>, <Lista> ]
Surface.Syntax=[ <Függvény>, <Szög> ]\n[ <Görbe>, <Szög>, <Egyenes> ]\n[ <Kifejezés>, <Kifejezés>, <Kifejezés>, <Változó 1>, <Kezdőérték>, <Végérték>, <Változó 2>, <Kezdőérték>, <Végérték> ]
TDistribution.Syntax=[ <Szabadságfokok>, <Változó értéke> ]\n[ <Szabadságfokok>, <Változó értéke>, <Eloszlásfüggvény logikai értéke> ]\n[ <Szabadságfokok>, x, <Eloszlásfüggvény logikai értéke> ]
TDistribution.SyntaxCAS=[ <Szabadságfokok>, <Változó értéke> ]
TMean2Estimate.Syntax=[ <1. minta elemeinek listája>, <2. minta elemeinek listája>, <Konfidencia szint>, <igaz I hamis> ]\n[ <1 minta átlaga>, <1. minta szórása>, <1. minta elemszáma>, <2. minta átlaga>, <2. minta szórása>, <2. minta elemszáma>, <Konfidencia szint>, <igaz I hamis> ]
TMeanEstimate.Syntax=[ <Minta elemeinek listája>, <Konfidencia szint> ]\n[ <Minta átlaga>, <Minta szórása>, <Minta mérete>, <Konfidencia szint> ]
TTest.Syntax=[ <Minta elemeinek listája>, <Becsült átlag>, <"<" | ">" | "≠"> ]\n[ <Minta átlaga>, <Minta szórása>, <Minta mérete>, <Becsült átlag>, <"<" | ">" | "≠"> ]
TTest2.Syntax=[ <1. minta elemeinek listája>, <2. minta elemeinek listája>, <"<" | ">" | "≠">, <igaz I hamis> ]\n[ <1 minta átlaga>, <1. minta szórása>, <1. minta elemszáma>, <2. minta átlaga>, <2. minta szórása>, <2. minta elemszáma>, <"<" | ">" | "≠">, <igaz I hamis> ]
TTestPaired.Syntax=[ <1. minta elemeinek listája>, <2. minta elemeinek listája>, <"<" | ">" | "≠"> ]
TableText.Syntax=[ <Lista>, <Lista>, ... ]\n[ <Lista>, <Lista>, ..., <Szöveg igazítása> ]
Take.Syntax=[ <Lista>, <Tól>, <Ig> ]\n[ <Lista>, <Tól> ]\n[ <Szöveg>, <Tól>, <Ig> ]\n[ <Szöveg>, <Tól> ]
Take.SyntaxCAS=[ <Lista>, <Tól> ]\n[ <Lista>, <Tól>, <Ig> ]
Tangent.Syntax=[ <Pont>, <Kúpszelet> ]\n[ <Pont>, <Függvény> ]\n[ <Pont a görbén>, <Görbe> ]\n[ <x- érték>, <Függvény> ]\n[ <Egyenes>, <Kúpszelet> ]\n[ <Kúpszelet>, <Kúpszelet> ]
Tangent.SyntaxCAS=[ <Szám>, <Függvény> ]\n[ <Pont>, <Alakzat> ]
TaylorSeries.Syntax=[ <Függvény>, <x- érték>, <Fokszám> ]
TaylorSeries.SyntaxCAS=[ <Kifejezés>, <x- érték>, <Fokszám> ]\n[ <Kifejezés>, <Változó>, <Változó értéke>, <Fokszám> ]
Tetrahedron.Syntax=[ <Equilateral Triangle> ]\n[ <Pont>, <Pont>, <Pont> ]\n[ <Pont>, <Pont>, <Irány> ]
Text.Syntax=[ <Alakzat> ]\n[ <Alakzat>, <Változók behelyettesítése - logikai érték> ]\n[ <Alakzat>, <Pont> ]\n[ <Alakzat>, <Pont>, <Változók behelyettesítése - logikai érték> ]\n[ <Alakzat>, <Pont>, <Változók behelyettesítése - logikai érték>, <Boolean for LaTeX formula> ]\n[<Alakzat>, <Pont>, <Változók behelyettesítése - logikai érték>, <Boolean for LaTeX formula>, <Horizontal alignment [-1|0|1]>]\n[<Alakzat>, <Pont>, <Változók behelyettesítése - logikai érték>, <Boolean for LaTeX formula>, <Horizontal alignment [-1|0|1]>, <Vertical alignment [-1|0|1]>]
TextToUnicode.Syntax=[ <Szöveg> ]
Textfield.Syntax=[ <Csatolt alakzat> ]
TiedRank.Syntax=[ <Lista> ]
ToBase.Syntax=[ <Szám>, <Alap> ]
ToComplex.Syntax=[ <Vektor> ]
ToExponential.SyntaxCAS=[ <Komplex szám> ]
ToPoint.Syntax=[ <Komplex szám> ]
ToPolar.Syntax=[ <Komplex szám> ]\n[ <Vektor> ]
ToolImage.Syntax=[ <Szám> ]\n[ <Szám>, <Pont> ]\n[ <Szám>, <Pont>, <Pont> ]
Top.Syntax=[ <Másodrendű görbe> ]
Translate.Syntax=[ <Alakzat>, <Vektor> ]\n[ <Vektor>, <Kezdőpont> ]
Transpose.Syntax=[ <Mátrix> ]
TrapezoidalSum.Syntax=[ <Függvény>, <Kezdő x-érték>, <Lezáró x-érték>, <Trapézok száma> ]
TravelingSalesman.Syntax=[ <Pontok listája> ]
TriangleCenter.Syntax=[ <Pont>, <Pont>, <Pont>, <Szám> ]
TriangleCurve.Syntax=[ <Pont>, <Pont>, <Pont>, <Egyenlet> ]
Triangular.Syntax=[ <Lower Bound>, <Upper Bound>, <Mode>, <Változó értéke> ]\n[ <Lower Bound>, <Upper Bound>, <Mode>, <Változó értéke>, <Eloszlásfüggvény logikai értéke> ]\n[ <Lower Bound>, <Upper Bound>, <Mode>, x, <Eloszlásfüggvény logikai értéke> ]
TrigCombine.Syntax=[ <Kifejezés> ]\n[ <Kifejezés>, <Cél függvény> ]
TrigExpand.Syntax=[ <Kifejezés> ]\n[ <Kifejezés>, <Cél függvény> ]
TrigExpand.SyntaxCAS=[ <Kifejezés> ]\n[ <Kifejezés>, <Cél függvény> ]\n[ <Kifejezés>, <Cél függvény>, <Célváltozó> ]\n[ <Kifejezés>, <Cél függvény>, <Célváltozó>, <Célváltozó> ]
TrigSimplify.Syntax=[ <Kifejezés> ]
Trilinear.Syntax=[ <Pont>, <Pont>, <Pont>, <Szám>, <Szám>, <Szám> ]
TurningPoint.Syntax=[ <Polinom> ]
Turtle.Syntax=[]
TurtleBack.Syntax=[ <Teknőc>, <Távolság> ]
TurtleDown.Syntax=[ <Teknőc> ]
TurtleForward.Syntax=[ <Teknőc>, <Távolság> ]
TurtleLeft.Syntax=[ <Teknőc>, <Szög> ]
TurtleRight.Syntax=[ <Teknőc>, <Szög> ]
TurtleUp.Syntax=[ <Teknőc> ]
UnicodeToLetter.Syntax=[ <Egész> ]
UnicodeToText.Syntax=[ <Egészek listája> ]
Uniform.Syntax=[ <Lower Bound>, <Upper Bound>, <Változó értéke> ]\n[ <Lower Bound>, <Upper Bound>, <Változó értéke>, <Eloszlásfüggvény logikai értéke> ]\n[ <Lower Bound>, <Upper Bound>, x, <Eloszlásfüggvény logikai értéke> ]
Union.Syntax=[ <Lista>, <Lista> ]\n[ <Sokszög>, <Sokszög> ]
Unique.Syntax=[ <Lista> ]
UnitOrthogonalVector.Syntax=[ <Egyenes> ]\n[ <Szakasz> ]\n[ <Vektor> ]
UnitOrthogonalVector.Syntax3D=[ <Egyenes> ]\n[ <Szakasz> ]\n[ <Vektor> ]\n[ <Sík> ]
UnitOrthogonalVector.SyntaxCAS=[ <Vektor> ]
UnitVector.Syntax=[ <Alakzat> ]
UnitVector.SyntaxCAS=[ <Vektor> ]
UpdateConstruction.Syntax=[ ]\n[ <Hányszor> ]
UpperSum.Syntax=[ <Függvény>, <Kezdő x-érték>, <Lezáró x-érték>, <Téglalapok száma> ]
Variance.Syntax=[ <Nyers adatok listája> ]\n[ <Számok listája>, <Gyakoriságok listája> ]
Variance.SyntaxCAS=[ <Számok listája> ]
Vector.Syntax=[ <Pont> ]\n[ <Kezdőpont>, <Végpont> ]
Vertex.Syntax=[ <Kúpszelet> ]\n[ <Inequality> ]\n[ <Sokszög> ]\n[ <Sokszög>, <Sorszám> ]\n[ <Szakasz>, <Sorszám> ]
VerticalText.Syntax=[ <Szöveg> ]\n[ <Szöveg>, <Pont> ]
Volume.Syntax=[ <Test> ]
Voronoi.Syntax=[ <Pontok listája> ]
Weibull.Syntax=[ <Alakparaméter>, <Szélesség>, <Változó értéke> ]\n[ <Alakparaméter>, <Szélesség>, <Változó értéke>, <Eloszlásfüggvény logikai értéke> ]\n[ <Alakparaméter>, <Szélesség>, x, <Eloszlásfüggvény logikai értéke> ]
Weibull.SyntaxCAS=[ <Alakparaméter>, <Szélesség>, <Változó értéke> ]
ZMean2Estimate.Syntax=[ <1. minta elemeinek listája>, <2. minta elemeinek listája>, <Szórás1>, <Szórás2>, <Konfidencia szint> ]\n[ <1 minta átlaga>, <Szórás1>, <1. minta elemszáma>, <2. minta átlaga>, <Szórás2>, <2. minta elemszáma>, <Konfidencia szint> ]
ZMean2Test.Syntax=[ <1. minta elemeinek listája>, <Szórás1>, <2. minta elemeinek listája>, <Szórás2>, <"<" | ">" | "≠"> ]\n[ <1 minta átlaga>, <Szórás1>, <1. minta elemszáma>, <2. minta átlaga>, <Szórás2>, <2. minta elemszáma>, <"<" | ">" | "≠"> ]
ZMeanEstimate.Syntax=[ <Minta elemeinek listája>, <Szórás>, <Konfidencia szint> ]\n[ <Minta átlaga>, <Szórás>, <Minta mérete>, <Konfidencia szint> ]
ZMeanTest.Syntax=[ <Minta elemeinek listája>, <Szórás>, <Becsült átlag>, <"<" | ">" | "≠"> ]\n[ <Minta átlaga>, <Szórás>, <Minta mérete>, <Becsült átlag>, <"<" | ">" | "≠"> ]
ZProportion2Estimate.Syntax=[ <Minta arány1>, <1. minta elemszáma>, <Minta arány2>, <2. minta elemszáma>, <Konfidencia szint> ]
ZProportion2Test.Syntax=[ <Minta arány1>, <1. minta elemszáma>, <Minta arány2>, <2. minta elemszáma>, <"<" | ">" | "≠"> ]
ZProportionEstimate.Syntax=[ <Minta arány>, <Minta mérete>, <Konfidencia szint> ]
ZProportionTest.Syntax=[ <Minta arány>, <Minta mérete>, <Hipotézis arányra>, <"<" | ">" | "≠"> ]
Zip.Syntax=[ <Kifejezés>, <Változó1>, <Lista1>, <Változó2y>, <Lista2>, ... ]
Zipf.Syntax=[ <Elemek száma>, <Kitevő> ]\n[ <Elemek száma>, <Kitevő>, <Eloszlásfüggvény logikai értéke> ]\n[ <Elemek száma>, <Kitevő>, <Változó értéke>, <Eloszlásfüggvény logikai értéke> ]
Zipf.SyntaxCAS=[ <Elemek száma>, <Kitevő>, <Változó értéke>, <Eloszlásfüggvény logikai értéke> ]
ZoomIn.Syntax=[ ]\n[ <Arány> ]\n[ <Arány>, <Középpont> ]\n[ <Min x>, <Min y>, <Max x>, <Max y> ]\n[ <Min x>, <Min y>, <Min z>, <Max x>, <Max y>, <Max z> ]
ZoomOut.Syntax=[ <Arány> ]\n[ <Arány>, <Középpont> ]
mad.Syntax=[ <Nyers adatok listája> ]\n[ <Számok listája>, <Gyakoriságok listája> ]
mean.Syntax=[ <Nyers adatok listája> ]\n[ <Számok listája>, <Gyakoriságok listája> ]
mean.SyntaxCAS=[ <Számok listája> ]
nCr.Syntax=[ <Szám (n)>, <Szám (k)> ]
stdev.Syntax=[ <Nyers adatok listája> ]\n[ <Számok listája>, <Gyakoriságok listája> ]
stdevp.Syntax=[ <Nyers adatok listája> ]\n[ <Számok listája>, <Gyakoriságok listája> ]
stdevp.SyntaxCAS=[ <Számok listája> ]