# Copyright (c) GeoGebra Group, office@geogebra.org
# The GeoGebra language files are licensed to you under the terms of the
# Creative Commons Attribution-NonCommercial-ShareAlike licence (version 3.0 or later),
# the current text of which can be found via this link:
# https://creativecommons.org/licenses/by-nc-sa/3.0/legalcode.
# Attribution (as required by that Creative Commons license) should take the form of
# (at least) a mention of our name, an appropriate copyright notice and a link to our
# website located at https://www.geogebra.org.
# For further details, please see https://www.geogebra.org/license
ANOVA.Syntax=[ <串列>, <串列>, ... ]
AffineRatio.Syntax=[ <點>, <點>, <點> ]
Angle.Syntax=[ <物件> ]\n[ <向量>, <向量> ]\n[ <線>, <線> ]\n[ <點>, <角點>, <點> ]\n[ <點>, <角點>, <角度> ]
Angle.Syntax3D=[ <物件> ]\n[ <向量>, <向量> ]\n[ <線>, <線> ]\n[ <線>, <平面> ]\n[ <平面>, <平面> ]\n[ <點>, <角點>, <點> ]\n[ <點>, <角點>, <角度> ]\n[ <點>, <點>, <點>, <Direction> ]
AngularBisector.Syntax=[ <線>, <線> ]\n[ <點>, <點>, <點> ]
Append.Syntax=[ <串列>, <物件> ]\n[ <物件>, <串列> ]
ApplyMatrix.Syntax=[ <矩陣>, <物件> ]
Arc.Syntax=[ <圓>, <點>, <點> ]\n[ <橢圓>, <點>, <點> ]\n[ <圓>, <參數值>, <參數值> ]\n[ <橢圓>, <參數值>, <參數值> ]
AreCollinear.Syntax=[ <點>, <點>, <點> ]
AreConcurrent.Syntax=[ <線>, <線>, <線> ]
AreConcyclic.Syntax=[ <點>, <點>, <點>, <點> ]
AreCongruent.Syntax=[ <物件>, <物件> ]
AreEqual.Syntax=[ <物件>, <物件> ]
AreParallel.Syntax=[ <線>, <線> ]
ArePerpendicular.Syntax=[ <線>, <線> ]
Area.Syntax=[ <圓錐曲線> ]\n[ <多邊形> ]\n[ <點>, ..., <點> ]
Assume.SyntaxCAS=[ <Condition>, <Expression> ]
Asymptote.Syntax=[ <物件> ]
AttachCopyToView.Syntax=[ <物件>, <View 0|1|2> ]\n[ <物件>, <View 0|1|2>, <Point 1>, <Point 2>, <Screen Point 1>, <Screen Point 2> ]
Axes.Syntax=[ <圓錐曲線> ]
Axes.Syntax3D=[ <圓錐曲線> ]\n[ <Quadric> ]
AxisStepX.Syntax=[ ]
AxisStepY.Syntax=[ ]
BarChart.Syntax=[ <List of Data>, <List of Frequencies> ]\n[ <List of Raw Data>, <Width of Bars>, <Vertical Scale Factor (optional)> ]\n[ <List of Data>, <List of Frequencies>, <Width of Bars> ]\n[ <Start Value>, <End Value>, <List of Heights> ]\n[ <Start Value>, <End Value>, <Expression>, <Variable>, <From Number>, <To Number> ]\n[ <Start Value>, <End Value>, <Expression>, <Variable>, <From Number>, <To Number>, <Step Width> ]
Barycenter.Syntax=[ <點集>, <加權值集合> ]
Bernoulli.Syntax=[ <機率>, <是否累積？> ]
Binomial.Syntax=[ <數值 n>, <數值 r> ]
BinomialDist.Syntax=[ <試驗次數>, <成功機率> ]\n[ <試驗次數>, <成功機率>, <是否累積？> ]\n[ <試驗次數>, <成功機率>, <變數值>, <是否累積？> ]
BinomialDist.SyntaxCAS=[ <試驗次數>, <成功機率>, <變數值>, <是否累積？> ]
Bottom.Syntax=[ <Quadric> ]
BoxPlot.Syntax=[ <yOffset>, <yScale>, <List of Raw Data> ]\n[ <yOffset>, <yScale>, <List of Raw Data>, <Boolean Outliers> ]\n[ <yOffset>, <yScale>, <List of Data>, <List of Frequencies>, <Boolean Outliers> ]\n[ <yOffset>, <yScale>, <Start Value>, <Q1>, <Median>, <Q3>, <End Value> ]
Button.Syntax=[ ]\n[ <文字> ]
CASLoaded.Syntax=[]
CFactor.SyntaxCAS=[ <Expression> ]\n[ <Expression>, <Variable> ]
CIFactor.SyntaxCAS=[ <Expression> ]\n[ <Expression>, <Variable> ]
CSolutions.SyntaxCAS=[ <Equation> ]\n[ <Equation>, <Variable> ]\n[ <List of Equations>, <List of Variables> ]
CSolve.SyntaxCAS=[ <Equation> ]\n[ <Equation>, <Variable> ]\n[ <List of Equations>, <List of Variables> ]
Cauchy.Syntax=[ <Median>, <Scale>, <變數值> ]\n[ <Median>, <Scale>, <變數值>, <是否累積？>  ]\n[ <Median>, <Scale>, x, <是否累積？> ]
Cauchy.SyntaxCAS=[ <Median>, <Scale>, <變數值> ]
Cell.Syntax=[ <欄>, <列> ]
CellRange.Syntax=[ <儲存格>, <儲存格> ]
Center.Syntax=[ <圓錐曲線> ]
Center.Syntax3D=[ <圓錐曲線> ]\n[ <Quadric> ]
CenterView.Syntax=[ <中心點> ]
Centroid.Syntax=[ <多邊形> ]
Checkbox.Syntax=[ ]\n[ <文字> ]\n[ <串列> ]\n[ <文字>, <串列> ]
ChiSquared.Syntax=[ <Degrees of Freedom>, <變數值> ]\n[ <Degrees of Freedom>, <變數值>, <是否累積？> ]\n[ <Degrees of Freedom>, x, <是否累積？> ]
ChiSquared.SyntaxCAS=[ <Degrees of Freedom>, <Variable> ]
ChiSquaredTest.Syntax=[ <矩陣> ]\n[ <串列>, <串列> ]\n[ <矩陣>, <矩陣> ]
Circle.Syntax=[ <點>, <半徑數值> ]\n[ <點>, <半徑線段> ]\n[ <點>, <點> ]\n[ <點>, <點>, <點> ]
Circle.Syntax3D=[ <點>, <半徑數值> ]\n[ <點>, <半徑線段> ]\n[ <點>, <點> ]\n[ <點>, <點>, <點> ]\n[ <線>, <點> ]\n[ <點>, <半徑>, <Direction> ]\n[ <點>, <點>, <Direction> ]
CircleArc.Syntax=[ <圓心>, <點>, <點> ]
CircleSector.Syntax=[ <圓心>, <點>, <點> ]
CircumcircleArc.Syntax=[ <點>, <點>, <點> ]
CircumcircleSector.Syntax=[ <點>, <點>, <點> ]
Circumference.Syntax=[ <圓錐曲線> ]
Classes.Syntax=[ <List of Data>, <Number of Classes> ]\n[ <List of Data>, <Start>, <Width of Classes> ]
ClosestPoint.Syntax=[ <Path>, <點> ]\n[ <線>, <線> ]
ClosestPointRegion.Syntax=[ <Region>, <點> ]
Coefficients.Syntax=[ <多項式> ]\n[ <圓錐曲線> ]
Coefficients.SyntaxCAS=[ <多項式> ]\n[ <多項式>, <Variable> ]
Column.Syntax=[ <儲存格> ]
ColumnName.Syntax=[ <儲存格> ]
Command=指令
CommonDenominator.Syntax=[ <Expression>, <Expression> ]
CompleteSquare.Syntax=[ <二次函數> ]
ComplexRoot.Syntax=[ <多項式> ]
Cone.Syntax=[ <圓>, <Height> ]\n[ <點>, <點>, <半徑> ]\n[ <點>, <向量>, <角度> ]
ConeInfinite.Syntax=[ <點>, <向量>, <角度> ]\n[ <點>, <點>, <角度> ]\n[ <點>, <線>, <角度> ]
Conic.Syntax=[ <串列> ]\n[ <點>, <點>, <點>, <點>, <點> ]\n[ <Number>, <Number>, <Number>, <Number>, <Number>, <Number> ]
ConstructionStep.Syntax=[ ]\n[ <物件> ]
ContingencyTable.Syntax=[ <List of Text>, <List of Text> ]\n[ <List of Text>, <List of Text>, <Options> ]\n[ <List of Row Values>, <List of Column Values>, <Frequency Table> ]\n[ <List of Row Values>, <List of Column Values>, <Frequency Table> , <Options> ]
ContinuedFraction.Syntax=[ <Number> ]\n[ <Number>, <Level> ]\n[ <Number>, <Level>, <Shorthand true|false> ]
ConvexHull.Syntax=[ <點集> ]
CopyFreeObject.Syntax=[ <物件> ]
Corner.Syntax=[ <頂點編號> ]\n[ <圖片>, <頂點編號> ]\n[ <文字>, <頂點編號> ]\n[ <繪圖區編號>, <頂點編號> ]
CountIf.Syntax=[ <Condition>, <串列> ]\n[ <Condition>, <Variable>, <串列> ]
Covariance.Syntax=[ <點集> ]\n[ <數列一>, <數列一> ]
Cross.Syntax=[ <向量>, <向量> ]
CrossRatio.Syntax=[ <點>, <點>, <點>, <點> ]
Cube.Syntax=[ <Square> ]\n[ <點>, <點>, <點> ]\n[ <點>, <點>, <Direction> ]
Cubic.Syntax=[ <點>, <點>, <點>, <Number> ]
Curvature.Syntax=[ <點>, <物件> ]
CurvatureVector.Syntax=[ <點>, <物件> ]
CurveCartesian.Syntax=[ <Expression>, <Expression>, <參數 t>, <Start Value>, <End Value> ]
CurveCartesian.Syntax3D=[ <Expression>, <Expression>, <參數 t>, <Start Value>, <End Value> ]\n[ <Expression>, <Expression>, <Expression>, <參數 t>, <Start Value>, <End Value> ]
Cylinder.Syntax=[ <圓>, <Height> ]\n[ <點>, <點>, <半徑> ]
CylinderInfinite.Syntax=[ <線>, <半徑> ]\n[ <點>, <向量>, <半徑> ]\n[ <點>, <點>, <半徑> ]
DataFunction.Syntax=[ <數列一>, <數列一> ]
Defined.Syntax=[ <物件> ]
Degree.Syntax=[ <多項式> ]
Degree.SyntaxCAS=[ <多項式> ]\n[ <多項式>, <Variable> ]
DelauneyTriangulation.Syntax=[ <點集> ]
Delete.Syntax=[ <物件> ]
Denominator.Syntax=[ <Number> ]\n[ <函數> ]
Denominator.SyntaxCAS=[ <Expression> ]
Derivative.Syntax=[ <函數> ]\n[ <曲線> ]\n[ <函數>, <Number> ]\n[ <函數>, <Variable> ]\n[ <曲線>, <Number> ]\n[ <函數>, <Variable>, <Number> ]
Derivative.SyntaxCAS=[ <Expression> ]\n[ <Expression>, <Variable> ]\n[ <Expression>, <Variable>, <Number> ]
Determinant.Syntax=[ <矩陣> ]
Diameter.Syntax=[ <向量>, <圓錐曲線> ]\n[ <線>, <圓錐曲線> ]
Difference.Syntax=[ <多邊形>, <多邊形> ]
Dilate.Syntax=[ <物件>, <縮放倍率> ]\n[ <物件>, <縮放倍率>, <縮放中心> ]
Dimension.Syntax=[ <物件> ]
Direction.Syntax=[ <線> ]
Directrix.Syntax=[ <圓錐曲線> ]
Distance.Syntax=[ <點>, <物件> ]\n[ <線>, <線> ]\n[ <平面>, <平面> ]
Div.Syntax=[ <被除數>, <除數> ]\n[ <被除式>, <除式> ]
Division.Syntax=[ <被除數>, <除數> ]\n[ <被除式>, <除式> ]
Divisors.Syntax=[ <Number> ]
DivisorsList.Syntax=[ <Number> ]
DivisorsSum.Syntax=[ <Number> ]
Dodecahedron.Syntax=[ <Regular Pentagon> ]\n[ <點>, <點>, <點> ]\n[ <點>, <點>, <Direction> ]
Dot.Syntax=[ <向量>, <向量> ]
DotPlot.Syntax=[ <List of Raw Data>, <Stack Adjacent Dots (optional)>, <Scale Factor (optional)>]
DynamicCoordinates.Syntax=[ <點>, <x-Coordinate>, <y-Coordinate> ]\n[ <點>, <x-Coordinate>, <y-Coordinate>, <z-Coordinate> ]
Eccentricity.Syntax=[ <圓錐曲線> ]
Eigenvalues.SyntaxCAS=[ <矩陣> ]
Eigenvectors.SyntaxCAS=[ <矩陣> ]
Element.Syntax=[ <串列>, <元素編號> ]\n[ <矩陣>, <列>, <欄> ]\n[ <串列>, <索引 1>, <索引 2>, ... ]
Element.SyntaxCAS=[ <串列>, <元素編號> ]\n[ <矩陣>, <列>, <欄> ]
Eliminate.Syntax=[ <List of Polynomials>, <List of Variables> ]
Ellipse.Syntax=[ <焦點>, <焦點>, <長軸半長> ]\n[ <焦點>, <焦點>, <半徑線段> ]\n[ <焦點>, <焦點>, <點> ]
Ends.Syntax=[ <Quadric> ]
Envelope.Syntax=[ <Path>, <點> ]
Erlang.Syntax=[ <Shape>, <Rate>, <變數值> ]\n[ <Shape>, <Rate>, <變數值>, <是否累積？> ]\n[ <Shape>, <Rate>, x, <是否累積？> ]
Excentricity.Syntax=[ <圓錐曲線> ]
Execute.Syntax=[ <List of Text> ]\n[ <List of Text>, <參數 1>, <參數 1>, ... ]
Expand.Syntax=[ <Expression> ]
Exponential.Syntax=[ <Lambda>, <變數值> ]\n[ <Lambda>, <變數值>, <是否累積？> ]\n[ <Lambda>, x, <是否累積？> ]
Exponential.SyntaxCAS=[ <Lambda>, <變數值> ]
ExportImage.Syntax=[ <Property>, <趨近值>, <Property>, <趨近值>, ... ]
Extremum.Syntax=[ <多項式> ]\n[ <函數>, <初值>, <末值> ]
FDistribution.Syntax=[ <Numerator Degrees of Freedom>, <Denominator Degrees of Freedom>, <變數值> ]\n[ <Numerator Degrees of Freedom>, <Denominator Degrees of Freedom>, <變數值>, <是否累積？> ]\n[ <Numerator Degrees of Freedom>, <Denominator Degrees of Freedom>, x, <是否累積？> ]
FDistribution.SyntaxCAS=[ <Numerator Degrees of Freedom>, <Denominator Degrees of Freedom>, <變數值> ]
Factor.Syntax=[ <多項式> ]
Factor.SyntaxCAS=[ <Number> ]\n[ <多項式> ]\n[ <Expression>, <Variable> ]
Factors.Syntax=[ <多項式> ]\n[ <Number> ]
FillCells.Syntax=[ <儲存格範圍>, <物件> ]\n[ <儲存格>, <串列> ]\n[ <儲存格>, <矩陣> ]
FillColumn.Syntax=[ <欄>, <串列> ]
FillRow.Syntax=[ <列>, <串列> ]
First.Syntax=[ <串列> ]\n[ <文字> ]\n[ <串列>, <元素數目> ]\n[ <文字>, <元素數目> ]\n[ <軌跡>, <元素數目> ]
First.SyntaxCAS=[ <串列> ]\n[ <串列>, <元素數目> ]
FirstAxis.Syntax=[ <圓錐曲線> ]
FirstAxisLength.Syntax=[ <圓錐曲線> ]
Fit.Syntax=[ <點集>, <函數集合> ]\n[ <點集>, <函數> ]
FitExp.Syntax=[ <點集> ]
FitGrowth.Syntax=[ <點集> ]
FitImplicit.Syntax=[ <點集>, <Order> ]
FitLineX.Syntax=[ <點集> ]
FitLineY.Syntax=[ <點集> ]
FitLog.Syntax=[ <點集> ]
FitLogistic.Syntax=[ <點集> ]
FitPoly.Syntax=[ <點集>, <Degree of Polynomial> ]\n[ <Freehand Function>, <Degree of Polynomial> ]
FitPow.Syntax=[ <點集> ]
FitSin.Syntax=[ <點集> ]
Flatten.Syntax=[ <串列> ]
Focus.Syntax=[ <圓錐曲線> ]
FractionText.Syntax=[ <Number> ]\n[ <點> ]
Frequency.Syntax=[ <List of Raw Data> ]\n[ <是否累積？>, <List of Raw Data> ]\n[ <List of Class Boundaries>, <List of Raw Data> ]\n[ <List of Text>, <List of Text> ]\n[ <是否累積？>, <List of Class Boundaries>, <List of Raw Data> ]\n[ <List of Class Boundaries>, <List of Raw Data>, <Use Density>, <Density Scale Factor (optional)> ]\n[ <是否累積？>, <List of Class Boundaries>, <List of Raw Data>, <Use Density>, <Density Scale Factor (optional)> ]
FrequencyPolygon.Syntax=[ <List of Class Boundaries>, <List of Heights> ]\n[ <List of Class Boundaries>, <List of Raw Data>, <Boolean Use Density>, <Density Scale Factor (optional)> ]\n[ <是否累積？>, <List of Class Boundaries>, <List of Raw Data>, <Boolean Use Density>, <Density Scale Factor (optional)> ]
FrequencyTable.Syntax=[ <List of Raw Data>, <Scale Factor (optional)> ]\n[ <是否累積？>, <List of Raw Data> ]\n[ <List of Class Boundaries>, <List of Raw Data> ]\n[ <是否累積？>, <List of Class Boundaries>, <List of Raw Data> ]\n[ <List of Class Boundaries>, <List of Raw Data>, <Use Density>, <Density Scale Factor (optional)> ]\n[ <是否累積？>, <List of Class Boundaries>, <List of Raw Data>, <Use Density>, <Density Scale Factor (optional)> ]
FromBase.Syntax=[ <Number as Text>, <Base> ]
Function.Syntax=[ <函數>, <初值>, <末值> ]\n[ <數列一> ]
Function.Syntax3D=[ <數列一> ]\n[ <函數>, <初值>, <末值> ]\n[ <Expression>, <Parameter Variable 1>, <Start Value>, <End Value>, <Parameter Variable 2>, <Start Value>, <End Value> ]
Function.SyntaxCAS=[ <函數>, <初值>, <末值> ]
FutureValue.Syntax=[ <Rate>, <Number of Periods>, <Payment>, <Present Value (optional)>, <Type (optional)> ]
GCD.Syntax=[ <數列一> ]\n[ <Number>, <Number> ]
GCD.SyntaxCAS=[ <數列一> ]\n[ <List of Polynomials> ]\n[ <Number>, <Number> ]\n[ <多項式>, <多項式> ]
Gamma.Syntax=[ <Alpha>, <Beta>, <變數值> ]\n[ <Alpha>, <Beta>, <變數值>, <是否累積？>  ]\n[ <Alpha>, <Beta>, x, <是否累積？> ]
Gamma.SyntaxCAS=[ <Alpha>, <Beta>, <變數值> ]
GeometricMean.Syntax=[ <數列一> ]
GetTime.Syntax=[]\n[ <Format> ]
GroebnerDegRevLex.Syntax=[ <List of Polynomials> ]\n[ <List of Polynomials>, <List of Variables> ]
GroebnerLex.Syntax=[ <List of Polynomials> ]\n[ <List of Polynomials>, <List of Variables> ]
GroebnerLexDeg.Syntax=[ <List of Polynomials> ]\n[ <List of Polynomials>, <List of Variables> ]
HarmonicMean.Syntax=[ <數列一> ]
Height.Syntax=[ <Solid> ]
HideLayer.Syntax=[ <Number> ]
Histogram.Syntax=[ <List of Class Boundaries>, <List of Heights> ]\n[ <List of Class Boundaries>, <List of Raw Data>, <Use Density>, <Density Scale Factor (optional)> ]\n[ <是否累積？>, <List of Class Boundaries>, <List of Raw Data>, <Use Density>, <Density Scale Factor (optional)> ]
HistogramRight.Syntax=[ <List of Class Boundaries>, <List of Heights> ]\n[ <List of Class Boundaries>, <List of Raw Data>, <Use Density>, <Density Scale Factor (optional)>  ]\n[ <是否累積？>, <List of Class Boundaries>, <List of Raw Data>, <Use Density>, <Density Scale Factor (optional)> ]
HyperGeometric.Syntax=[ <Population Size>, <Number of Successes>, <Sample Size> ]\n[ <Population Size>, <Number of Successes>, <Sample Size>, <是否累積？> ]\n[ <Population Size>, <Number of Successes>, <Sample Size>, <變數值>, <是否累積？> ]
HyperGeometric.SyntaxCAS=[ <Population Size>, <Number of Successes>, <Sample Size>, <變數值>, <是否累積？> ]
Hyperbola.Syntax=[ <焦點>, <焦點>, <長軸半長> ]\n[ <焦點>, <焦點>, <半徑線段> ]\n[ <焦點>, <焦點>, <點> ]
IFactor.Syntax=[ <多項式> ]
IFactor.SyntaxCAS=[ <Expression> ]\n[ <Expression>, <Variable> ]
Icosahedron.Syntax=[ <Equilateral Triangle> ]\n[ <點>, <點>, <點> ]\n[ <點>, <點>, <Direction> ]
Identity.Syntax=[ <Number> ]
If.Syntax=[ <Condition>, <則> ]\n[ <Condition>, <則>, <否則> ]
ImplicitCurve.Syntax=[ <點集> ]\n[ <雙變數函數> ]
ImplicitDerivative.Syntax=[ <雙變數函數> ]
ImplicitDerivative.SyntaxCAS=[ <雙變數函數> ]\n[ <Expression>, <Dependent Variable>, <Independent Variable> ]
Incircle.Syntax=[ <點>, <點>, <點> ]
IndexOf.Syntax=[ <物件>, <串列> ]\n[ <文字>, <文字> ]\n[ <物件>, <串列>, <搜尋起始點> ]\n[ <文字>, <文字>, <搜尋起始點> ]
Insert.Syntax=[ <串列>, <串列>, <插入位置> ]\n[ <物件>, <串列>, <插入位置> ]
Integral.Syntax=[ <函數> ]\n[ <函數>, <Variable> ]\n[ <函數>, <初值>, <末值> ]\n[ <函數>, <初值>, <末值>, <計算積分值？> ]
Integral.SyntaxCAS=[ <函數> ]\n[ <函數>, <Variable> ]\n[ <函數>, <初值>, <末值> ]\n[ <函數>, <Variable>, <Start Value>, <End Value> ]
IntegralBetween.Syntax=[ <函數>, <函數>, <初值>, <末值> ]\n[ <函數>, <函數>, <初值>, <末值>, <計算積分值？> ]
IntegralBetween.SyntaxCAS=[ <函數>, <函數>, <初值>, <末值> ]\n[ <函數>, <函數>, <Variable>, <Start Value>, <End Value> ]
IntegralSymbolic.Syntax=[ <函數> ]\n[ <函數>, <Variable> ]
InteriorAngles.Syntax=[ <多邊形> ]
Intersect.Syntax=[ <物件>, <物件> ]\n[ <物件>, <物件>, <Index of Intersection Point> ]\n[ <物件>, <物件>, <Initial Point> ]\n[ <函數>, <函數>, <初值>, <末值> ]\n[ <Curve 1>, <Curve 2>, <Parameter 1>, <Parameter 2> ]
Intersect.SyntaxCAS=[ <函數>, <函數> ]
IntersectConic.Syntax=[ <平面>, <Quadric> ]\n[ <Quadric>, <Quadric> ]
IntersectPath.Syntax=[ <線>, <多邊形> ]\n[ <多邊形>, <多邊形> ]
IntersectPath.Syntax3D=[ <線>, <多邊形> ]\n[ <多邊形>, <多邊形> ]\n[ <平面>, <多邊形> ]\n[ <平面>, <Quadric> ]
Intersection.Syntax=[ <串列>, <串列> ]
InverseBinomial.Syntax=[ <試驗次數>, <成功機率>, <機率> ]
InverseCauchy.Syntax=[ <Median>, <Scale>, <機率> ]
InverseChiSquared.Syntax=[ <Degrees of Freedom>, <機率> ]
InverseExponential.Syntax=[ <Lambda>, <機率> ]
InverseFDistribution.Syntax=[ <Numerator Degrees of Freedom>, <Denominator Degrees of Freedom>, <機率> ]
InverseGamma.Syntax=[ <Alpha>, <Beta>, <機率> ]
InverseHyperGeometric.Syntax=[ <Population Size>, <Number of Successes>, <Sample Size>, <機率> ]
InverseLaplace.Syntax=[ <函數> ]\n[ <函數>, <Variable> ]\n[ <函數>, <Variable>, <Variable> ]
InverseLogNormal.Syntax=[ <Mean>, <Standard Deviation>, <機率> ]
InverseLogistic.Syntax=[ <Mean>, <Scale>, <機率> ]
InverseNormal.Syntax=[ <Mean>, <Standard Deviation>, <機率> ]
InversePascal.Syntax=[ <成功次數>, <成功機率>, <機率> ]
InversePoisson.Syntax=[ <Mean>, <機率> ]
InverseTDistribution.Syntax=[ <Degrees of Freedom>, <機率> ]
InverseWeibull.Syntax=[ <Shape>, <Scale>, <機率> ]
InverseZipf.Syntax=[ <元素數目>, <Exponent>, <機率> ]
Invert.Syntax=[ <矩陣> ]\n[ <函數> ]
IsFactored.Syntax=[ <多項式> ]
IsInRegion.Syntax=[ <點>, <Region> ]
IsInteger.Syntax=[ <Number> ]
IsPrime.Syntax=[ <Number> ]
IsTangent.Syntax=[ <線>, <圓錐曲線> ]
IsVertexForm.Syntax=[ <函數> ]
Iteration.Syntax=[ <函數>, <Start Value>, <Number of Iterations> ]\n[ <Expression>, <Variables>, <Start Values>, <Count> ]
IterationList.Syntax=[ <函數>, <Start Value>, <Number of Iterations> ]\n[ <Expression>, <Variables>, <Start Values>, <Count> ]
Join.Syntax=[ <二維串列> ]\n[ <串列>, <串列>, ... ]
JordanDiagonalization.SyntaxCAS=[ <矩陣> ]
KeepIf.Syntax=[ <Condition>, <串列> ]\n[ <Condition>, <Variable>, <串列> ]
LCM.Syntax=[ <數列一> ]\n[ <Number>, <Number> ]
LCM.SyntaxCAS=[ <數列一> ]\n[ <List of Polynomials> ]\n[ <Number>, <Number> ]\n[ <多項式>, <多項式> ]
LaTeX.Syntax=[ <物件> ]\n[ <物件>, <代換變數？> ]\n[ <物件>, <代換變數？>, <顯示物件名？> ]
Laplace.Syntax=[ <函數> ]\n[ <函數>, <Variable> ]\n[ <函數>, <Variable>, <Variable> ]
Last.Syntax=[ <串列> ]\n[ <文字> ]\n[ <串列>, <元素數目> ]\n[ <文字>, <元素數目> ]
Last.SyntaxCAS=[ <串列> ]\n[ <串列>, <元素數目> ]
LeftSide.Syntax=[ <Equation> ]
LeftSide.SyntaxCAS=[ <Equation> ]\n[ <List of Equations> ]\n[ <List of Equations>, <Index> ]
LeftSum.Syntax=[ <函數>, <初值>, <末值>, <長條數> ]
Length.Syntax=[ <物件> ]\n[ <函數>, <初值>, <末值> ]\n[ <函數>, <起始點>, <結束點> ]\n[ <曲線>, <起始 t 值>, <結束 t 值> ]\n[ <曲線>, <起始點>, <結束點> ]
Length.SyntaxCAS=[ <串列> ]\n[ <函數>, <初值>, <末值> ]\n[ <函數>, <Variable>, <初值>, <末值> ]
LetterToUnicode.Syntax=[ <字元> ]
Limit.Syntax=[ <函數>, <趨近值> ]
Limit.SyntaxCAS=[ <Expression>, <趨近值> ]\n[ <Expression>, <Variable>, <趨近值> ]
LimitAbove.Syntax=[ <函數>, <趨近值> ]
LimitAbove.SyntaxCAS=[ <Expression>, <趨近值> ]\n[ <Expression>, <Variable>, <趨近值> ]
LimitBelow.Syntax=[ <函數>, <趨近值> ]
LimitBelow.SyntaxCAS=[ <Expression>, <趨近值> ]\n[ <Expression>, <Variable>, <趨近值> ]
Line.Syntax=[ <點>, <點> ]\n[ <點>, <平行線> ]\n[ <點>, <方向向量> ]
LineBisector.Syntax=[ <半徑線段> ]\n[ <點>, <點> ]
LineBisector.Syntax3D=[ <半徑線段> ]\n[ <點>, <點> ]\n[ <點>, <點>, <Direction> ]
LineGraph.Syntax=[ <x 座標集合>, <y 座標集合> ]
Locus.Syntax=[ <Point Creating Locus Line>, <點> ]\n[ <Point Creating Locus Line>, <Slider> ]\n[ <Slopefield>, <點> ]\n[ <雙變數函數>, <點> ]
LocusEquation.Syntax=[ <軌跡> ]\n[ <Locus Point>, <Moving Point> ]\n[ <布林表達式>, <Moving Point> ]
LogNormal.Syntax=[ <Mean>, <Standard Deviation>, <變數值> ]\n[ <Mean>, <Standard Deviation>, <變數值>, <是否累積？>  ]\n[ <Mean>, <Standard Deviation>, x, <是否累積？> ]
Logistic.Syntax=[ <Mean>, <Scale>, <變數值> ]\n[ <Mean>, <Scale>, <變數值>, <是否累積？>  ]\n[ <Mean>, <Scale>, x, <是否累積？> ]
LowerSum.Syntax=[ <函數>, <初值>, <末值>, <長條數> ]
MatrixRank.Syntax=[ <矩陣> ]
Max.Syntax=[ <區間> ]\n[ <Number>, <Number> ]\n[ <串列> ]\n[ <List of Data>, <List of Frequencies> ]\n[ <函數>, <初值>, <末值> ]
Max.SyntaxCAS=[ <串列> ]\n[ <Number>, <Number> ]
Maximize.Syntax=[ <Dependent Number>, <Free Number> ]\n[ <Dependent Number>, <Point on Path> ]
Mean.Syntax=[ <List of Raw Data> ]\n[ <數列一>, <List of Frequencies> ]
Mean.SyntaxCAS=[ <數列一> ]
MeanX.Syntax=[ <點集> ]
MeanY.Syntax=[ <點集> ]
Median.Syntax=[ <List of Raw Data> ]\n[ <數列一>, <List of Frequencies> ]
Median.SyntaxCAS=[ <數列一> ]
Midpoint.Syntax=[ <半徑線段> ]\n[ <圓錐曲線> ]\n[ <區間> ]\n[ <點>, <點> ]
Min.Syntax=[ <區間> ]\n[ <Number>, <Number> ]\n[ <串列> ]\n[ <List of Data>, <List of Frequencies> ]\n[ <函數>, <初值>, <末值> ]
Min.SyntaxCAS=[ <串列> ]\n[ <Number>, <Number> ]
Minimize.Syntax=[ <Dependent Number>, <Free Number> ]\n[ <Dependent Number>, <Point on Path> ]
MinimumSpanningTree.Syntax=[ <點集> ]
Mirror.Syntax=[ <物件>, <點> ]\n[ <物件>, <線> ]\n[ <物件>, <圓> ]
Mirror.Syntax3D=[ <物件>, <點> ]\n[ <物件>, <線> ]\n[ <物件>, <平面> ]\n[ <物件>, <圓> ]
MixedNumber.SyntaxCAS=[ <Number> ]
Mod.Syntax=[ <被除數>, <除數> ]\n[ <被除式>, <除式> ]
Mode.Syntax=[ <數列一> ]
NDerivative.Syntax=[ <函數> ]\n[ <函數>, <Order> ]
NIntegral.Syntax=[ <函數> ]\n[ <函數>, <初值>, <末值> ]
NIntegral.SyntaxCAS=[ <函數>, <初值>, <末值> ]\n[ <函數>, <Variable>, <Start Value>, <End Value> ]
NInvert.Syntax=[ <函數> ]
NSolutions.Syntax=[ <Equation> ]
NSolutions.SyntaxCAS=[ <Equation> ]\n[ <Equation>, <Variable> ]\n[ <Equation>, <Variable = starting value> ]\n[ <List of Equations>, <List of Variables> ]
NSolve.Syntax=[ <Equation> ]
NSolve.SyntaxCAS=[ <Equation> ]\n[ <Equation>, <Variable> ]\n[ <Equation>, <Variable = starting value> ]\n[ <List of Equations>, <List of Variables> ]
NSolveODE.Syntax=[ <List of Derivatives>, <Initial x-coordinate>, <List of Initial y-coordinates>, <Final x-coordinate> ]
Name.Syntax=[ <物件> ]
Net.Syntax=[ <Polyhedron>, <Number> ]\n[ <Polyhedron>, <Number>, <Face>, <Edge>, <Edge>, ... ]
NextPrime.Syntax=[ <Number> ]
Normal.Syntax=[ <Mean>, <Standard Deviation>, <變數值> ]\n[ <Mean>, <Standard Deviation>, <變數值>, <是否累積？> ]\n[ <Mean>, <Standard Deviation>, x, <是否累積？> ]
Normal.SyntaxCAS=[ <Mean>, <Standard Deviation>, <變數值> ]
NormalQuantilePlot.Syntax=[ <List of Raw Data> ]
Normalize.Syntax=[ <數列一> ]\n[ <點集> ]
Numerator.Syntax=[ <Number> ]\n[ <函數> ]
Numerator.SyntaxCAS=[ <Expression> ]
Numeric.SyntaxCAS=[ <Expression> ]\n[ <Expression>, <Significant Figures> ]
Object.Syntax=[ <物件名稱字串> ]
Octahedron.Syntax=[ <Equilateral Triangle> ]\n[ <點>, <點>, <點> ]\n[ <點>, <點>, <Direction> ]
Ordinal.Syntax=[ <整數> ]
OrdinalRank.Syntax=[ <串列> ]
OrthogonalLine.Syntax=[ <點>, <線> ]\n[ <點>, <半徑線段> ]\n[ <點>, <向量> ]
OrthogonalLine.Syntax3D=[ <點>, <線> ]\n[ <點>, <半徑線段> ]\n[ <點>, <向量> ]\n[ <點>, <平面> ]\n[ <線>, <線> ]\n[ <點>, <Direction>, <Direction> ]\n[ <點>, <線>, <Context> ]
OrthogonalPlane.Syntax=[ <點>, <線> ]\n[ <點>, <向量> ]
OrthogonalVector.Syntax=[ <線> ]\n[ <半徑線段> ]\n[ <向量> ]
OrthogonalVector.Syntax3D=[ <線> ]\n[ <半徑線段> ]\n[ <向量> ]\n[ <平面> ]
OrthogonalVector.SyntaxCAS=[ <向量> ]
OsculatingCircle.Syntax=[ <點>, <物件> ]
PMCC.Syntax=[ <點集> ]\n[ <x 座標集合>, <y 座標集合> ]
Pan.Syntax=[ <x 像素>, <y 像素> ]
Pan.Syntax3D=[ <x 像素>, <y 像素> ]\n[ <x 像素>, <y 像素>, <z> ]
Parabola.Syntax=[ <點>, <線> ]
Parameter.Syntax=[ <拋物線> ]
ParametricDerivative.Syntax=[ <曲線> ]
ParseToFunction.Syntax=[ <函數>, <定義字串> ]
ParseToNumber.Syntax=[ <Number>, <定義字串> ]
PartialFractions.Syntax=[ <函數> ]
PartialFractions.SyntaxCAS=[ <函數> ]\n[ <函數>, <Variable> ]
Pascal.Syntax=[ <成功次數>, <成功機率> ]\n[ <成功次數>, <成功機率>, <是否累積？> ]\n[ <成功次數>, <成功機率>, <變數值>, <是否累積？> ]
Pascal.SyntaxCAS=[ <成功次數>, <成功機率>, <變數值>, <是否累積？> ]
PathParameter.Syntax=[ <路徑點> ]
Payment.Syntax=[ <Rate>, <Number of Periods>, <Present Value>, <Future Value (optional)>, <Type (optional)> ]
Percentile.Syntax=[ <數列一>, <Percent> ]
Perimeter.Syntax=[ <多邊形> ]\n[ <圓錐曲線> ]\n[ <軌跡> ]
Periods.Syntax=[ <Rate>, <Payment>, <Present Value>, <Future Value (optional)>, <Type (optional)> ]
PieChart.Syntax=[ <List of Frequencies> ]\n[ <List of Frequencies>, <Center>, <半徑> ]
Plane.Syntax=[ <多邊形> ]\n[ <圓錐曲線> ]\n[ <點>, <平面> ]\n[ <點>, <線> ]\n[ <線>, <線> ]\n[ <點>, <點>, <點> ]\n[ <點>, <向量>, <向量> ]
PlaneBisector.Syntax=[ <半徑線段> ]\n[ <點>, <點> ]
PlaySound.Syntax=[ <URL> ]\n[ <Boolean Play> ]\n[ <函數>, <Min Value>, <Max Value> ]\n[ <函數>, <Min Value>, <Max Value>, <Sample Rate>, <Sample Depth> ]
PlotSolve.Syntax=[ <Equation in x> ]
Point.Syntax=[ <物件> ]\n[ <物件>, <參數 1> ]\n[ <點>, <向量> ]\n[ <串列> ]
PointIn.Syntax=[ <Region> ]
PointList.Syntax=[ <串列> ]
Poisson.Syntax=[ <Mean> ]\n[ <Mean>, <是否累積？> ]\n[ <Mean>, <變數值>, <是否累積？> ]
Poisson.SyntaxCAS=[ <Mean>, <變數值>, <是否累積？> ]
Polar.Syntax=[ <點>, <圓錐曲線> ]\n[ <線>, <圓錐曲線> ]
PolyLine.Syntax=[ <點集> ]\n[ <點>, ..., <點> ]
Polygon.Syntax=[ <點集> ]\n[ <點>, ..., <點> ]\n[ <點>, <點>, <頂點數> ]
Polygon.Syntax3D=[ <點集> ]\n[ <點>, ..., <點> ]\n[ <點>, <點>, <頂點數> ]\n[ <點>, <點>, <頂點數>, <Direction> ]
Polynomial.Syntax=[ <函數> ]\n[ <點集> ]
Polynomial.SyntaxCAS=[ <函數> ]\n[ <函數>, <Variable> ]
PresentValue.Syntax=[ <Rate>, <Number of Periods>, <Payment>, <Future Value (optional)>, <Type (optional)> ]
PreviousPrime.Syntax=[ <Number> ]
PrimeFactors.Syntax=[ <Number> ]
Prism.Syntax=[ <多邊形>, <點> ]\n[ <多邊形>, <Height value> ]\n[ <點>, <點>, ... ]
Product.Syntax=[ <List of Raw Data> ]\n[ <數列一>, <元素數目> ]\n[ <數列一>, <List of Frequencies> ]\n[ <Expression>, <Variable>, <Start Value>, <End Value> ]
Product.SyntaxCAS=[ <List of Expressions> ]\n[ <Expression>, <Variable>, <搜尋起始點>, <End Index> ]
Prove.Syntax=[ <布林表達式> ]
ProveDetails.Syntax=[ <布林表達式> ]
Pyramid.Syntax=[ <多邊形>, <點> ]\n[ <多邊形>, <Height> ]\n[ <點>, <點>, <點>, <點>, ... ]
Q1.Syntax=[ <List of Raw Data> ]\n[ <數列一>, <List of Frequencies> ]
Q3.Syntax=[ <List of Raw Data> ]\n[ <數列一>, <List of Frequencies> ]
QuadricSide.Syntax=[ <Quadric> ]
RSquare.Syntax=[ <點集>, <函數> ]
Radius.Syntax=[ <圓錐曲線> ]
Random.Syntax=[ <最小整數>, <最大整數> ]\n[ <最小整數>, <最大整數>, <固定> ]
Random.SyntaxCAS=[ <最小整數>, <最大整數> ]
RandomBinomial.Syntax=[ <試驗次數>, <機率> ]
RandomDiscrete.Syntax=[ <串列>, <串列> ]
RandomElement.Syntax=[ <串列> ]
RandomNormal.Syntax=[ <Mean>, <Standard Deviation> ]
RandomPointIn.Syntax=[ <Region> ]\n[ <點集> ]\n[ <xMin>, <xMax>, <yMin>, <yMax> ]
RandomPoisson.Syntax=[ <Mean> ]
RandomPolynomial.Syntax=[ <Degree>, <Minimum for Coefficients>, <Maximum for Coefficients> ]
RandomPolynomial.SyntaxCAS=[ <Degree>, <Minimum for Coefficients>, <Maximum for Coefficients> ]\n[ <Variable>, <Degree>, <Minimum for Coefficients>, <Maximum for Coefficients> ]
RandomUniform.Syntax=[ <最小值>, <最大值> ]\n[ <最小值>, <最大值>, <樣本數> ]
Rate.Syntax=[ <Number of Periods>, <Payment>, <Present Value>, <Future Value (optional)>, <Type (optional)>, <Guess (optional)> ]
Rationalize.SyntaxCAS=[ <Number> ]
Ray.Syntax=[ <起始點>, <點> ]\n[ <起始點>, <方向向量> ]
ReadText.Syntax=[ <文字> ]
RectangleSum.Syntax=[ <函數>, <初值>, <末值>, <長條數>, <Position for rectangle start> ]
ReducedRowEchelonForm.Syntax=[ <矩陣> ]
Relation.Syntax=[ <串列> ]\n[ <物件>, <物件> ]
RemovableDiscontinuity.Syntax=[ <函數> ]
Remove.Syntax=[ <串列>, <串列> ]
RemoveUndefined.Syntax=[ <串列> ]
Rename.Syntax=[ <物件>, <名稱> ]
Repeat.Syntax=[ <Number>, <Scripting Command>, <Scripting Command>, ... ]
ReplaceAll.Syntax=[ <文字>, <Text to Match>, <Text to Replace> ]
ResidualPlot.Syntax=[ <點集>, <函數> ]
Reverse.Syntax=[ <串列> ]
RightSide.Syntax=[ <Equation> ]
RightSide.SyntaxCAS=[ <Equation> ]\n[ <List of Equations> ]\n[ <List of Equations>, <Index> ]
RigidPolygon.Syntax=[ <多邊形> ]\n[ <多邊形>, <Offset x>, <Offset y> ]\n[ <Free Point>, ..., <Free Point> ]
Root.Syntax=[ <多項式> ]\n[ <函數>, <Initial x-Value> ]\n[ <函數>, <初值>, <末值> ]
Root.SyntaxCAS=[ <多項式> ]
RootList.Syntax=[ <串列> ]
RootMeanSquare.Syntax=[ <數列一> ]
Roots.Syntax=[ <函數>, <初值>, <末值> ]
Rotate.Syntax=[ <物件>, <角度> ]\n[ <物件>, <角度>, <點> ]
Rotate.Syntax3D=[ <物件>, <角度> ]\n[ <物件>, <角度>, <點> ]\n[ <物件>, <角度>, <旋轉軸> ]\n[ <物件>, <角度>, <旋轉軸上的固定點>, <旋轉軸或平面的方向> ]
RotateText.Syntax=[ <文字>, <角度> ]
Row.Syntax=[ <儲存格> ]
RunClickScript.Syntax=[ <物件> ]
RunUpdateScript.Syntax=[ <物件> ]
SDX.Syntax=[ <點集> ]
SDY.Syntax=[ <點集> ]
SVD.Syntax=[ <矩陣> ]
SXX.Syntax=[ <數列一> ]\n[ <點集> ]
SXY.Syntax=[ <點集> ]\n[ <數列一>, <數列一> ]
SYY.Syntax=[ <點集> ]
Sample.Syntax=[ <串列>, <Size> ]\n[ <串列>, <Size>, <With Replacement> ]
SampleSD.SyntaxCAS=[ <數列一> ]
SampleSDX.Syntax=[ <點集> ]
SampleSDY.Syntax=[ <點集> ]
SampleVariance.Syntax=[ <List of Raw Data> ]\n[ <數列一>, <List of Frequencies> ]
SampleVariance.SyntaxCAS=[ <數列一> ]
ScientificText.Syntax=[ <Number> ]\n[ <Number>, <精確度> ]
SecondAxis.Syntax=[ <圓錐曲線> ]
SecondAxisLength.Syntax=[ <圓錐曲線> ]
Sector.Syntax=[ <圓錐曲線>, <點>, <點> ]\n[ <圓錐曲線>, <參數值>, <參數值> ]
Segment.Syntax=[ <點>, <點> ]\n[ <點>, <長度> ]
SelectObjects.Syntax=[ ]\n[ <物件>, <物件>, ... ]
SelectedElement.Syntax=[ <串列> ]
SelectedIndex.Syntax=[ <串列> ]
Semicircle.Syntax=[ <點>, <點> ]
Sequence.Syntax=[ <End Value> ]\n[ <Start Value>, <End Value> ]\n[ <Start Value>, <End Value>, <遞增值> ]\n[ <Expression>, <Variable>, <Start Value>, <End Value> ]\n[ <Expression>, <Variable>, <Start Value>, <End Value>, <遞增值> ]
SetActiveView.Syntax=[ <視區> ]\n[ <平面> ]
SetAxesRatio.Syntax=[ <Number>, <Number> ]
SetAxesRatio.Syntax3D=[ <Number>, <Number> ]\n[ <Number>, <Number>, <Number> ]
SetBackgroundColor.Syntax=[ <顏色> ]\n[ <物件>, <顏色> ]\n[ <紅>, <綠>, <藍> ]\n[ <物件>, <紅>, <綠>, <藍> ]
SetCaption.Syntax=[ <物件>, <文字> ]
SetColor.Syntax=[ <物件>, <顏色> ]\n[ <物件>, <紅>, <綠>, <藍> ]
SetConditionToShowObject.Syntax=[ <物件>, <Condition> ]
SetConstructionStep.Syntax=[ <Number> ]
SetCoords.Syntax=[ <物件>, <x 像素>, <y 像素> ]\n[ <物件>, <x 像素>, <y 像素>, <z> ]
SetDecoration.Syntax=[ <物件>, <Number> ]\n[ <半徑線段>, <Number>, <Number>]
SetDynamicColor.Syntax=[ <物件>, <紅>, <綠>, <藍> ]\n[ <物件>, <紅>, <綠>, <藍>, <不透明度> ]
SetFilling.Syntax=[ <物件>, <Number> ]
SetFixed.Syntax=[ <物件>, <true | false> ]\n[ <物件>, <true | false>, <true | false> ]
SetLabelMode.Syntax=[ <物件>, <Number> ]
SetLayer.Syntax=[ <物件>, <Layer> ]
SetLevelOfDetail.Syntax=[ <Surface>, <Level of Detail> ]
SetLineStyle.Syntax=[ <物件>, <Number> ]
SetLineThickness.Syntax=[ <物件>, <Number> ]
SetPerspective.Syntax=[ <文字> ]
SetPointSize.Syntax=[ <物件>, <Number> ]
SetPointStyle.Syntax=[ <點>, <Number> ]
SetSeed.Syntax=[ <整數> ]
SetSpinSpeed.Syntax=[ <Number> ]
SetTooltipMode.Syntax=[ <物件>, <Number> ]
SetTrace.Syntax=[ <物件>, <true | false> ]
SetValue.Syntax=[ <布林值>, <0|1> ]\n[ <物件>, <物件> ]\n[ <串列>, <Number>, <物件> ]
SetViewDirection.Syntax=[ ]\n[ <Direction> ]\n[ <Direction>, <Boolean animate> ]
SetVisibleInView.Syntax=[ <物件>, <View Number 1|2>, <布林值> ]
Shear.Syntax=[ <物件>, <線>, <比例> ]
ShortestDistance.Syntax=[ <List of Segments>, <起始點>, <結束點>, <Boolean Weighted> ]
ShowAxes.Syntax=[]\n[ <布林值> ]\n[ <視區>, <布林值> ]
ShowGrid.Syntax=[]\n[ <布林值> ]\n[ <視區>, <布林值> ]
ShowLabel.Syntax=[ <物件>, <布林值> ]
ShowLayer.Syntax=[ <Number> ]
Shuffle.Syntax=[ <串列> ]
SigmaXX.Syntax=[ <點集> ]\n[ <List of Raw Data> ]\n[ <數列一>, <List of Frequencies> ]
SigmaXY.Syntax=[ <點集> ]\n[ <x 座標集合>, <y 座標集合> ]
SigmaYY.Syntax=[ <點集> ]
Simplify.Syntax=[ <函數> ]\n[ <文字> ]
Simplify.SyntaxCAS=[ <函數> ]
Slider.Syntax=[ <最小值>, <最大值>, <遞增值>, <Speed>, <Width>, <Is Angle>, <Horizontal>, <Animating>, <Random> ]
Slope.Syntax=[ <線> ]
SlopeField.Syntax=[ <雙變數函數> ]\n[ <雙變數函數>, <數值 n> ]\n[ <雙變數函數>, <數值 n>, <Length Multiplier a> ]\n[ <雙變數函數>, <數值 n>, <Length Multiplier a>, <x 最小值>, <y 最小值>, <x 最大值>, <y 最大值> ]
SlowPlot.Syntax=[ <函數> ]\n[ <函數>, <Boolean Repeat> ]
Solutions.Syntax=[ <Equation> ]
Solutions.SyntaxCAS=[ <Equation> ]\n[ <Equation>, <Variable> ]\n[ <List of Equations>, <List of Variables> ]
Solve.Syntax=[ <Equation> ]
Solve.SyntaxCAS=[ <Equation in x> ]\n[ <Equation>, <Variable> ]\n[ <List of Equations>, <List of Variables> ]\n[ <List of Parametric Equations>, <List of Variables> ]\n[ <Equation>, <Variable>, <List of assumptions> ]
SolveCubic.SyntaxCAS=[ <Cubic Polynomial> ]
SolveODE.Syntax=[ <f'(x, y)> ]\n[ <f'(x, y)>, <Point on f> ]\n[ <f'(x, y)>, <Start x>, <Start y>, <End x>, <Step> ]\n[ <y'>, <x'>, <Start x>, <Start y>, <End t>, <Step> ]\n[ <b(x)>, <c(x)>, <f(x)>, <Start x>, <Start y>, <Start y'>, <End x>, <Step> ]
SolveODE.SyntaxCAS=[ <Equation> ]\n[ <Equation>, <Point(s) on f> ]\n[ <Equation>, <Point(s) on f>, <Point(s) on f'> ]\n[ <Equation>, <Dependent Variable>, <Independent Variable>, <Point(s) on f> ] \n[ <Equation>, <Dependent Variable>, <Independent Variable>, <Point(s) on f>, <Point(s) on f'> ]
SolveQuartic.SyntaxCAS=[ <Quartic Polynomial> ]
Sort.Syntax=[ <串列> ]\n[ <值串列>, <鍵串列> ]
Spearman.Syntax=[ <點集> ]\n[ <數列一>, <數列一> ]
Sphere.Syntax=[ <點>, <半徑> ]\n[ <點>, <點> ]
Spline.Syntax=[ <點集> ]\n[ <點集>, <Order ≥ 3> ]\n[ <點集>, <Order ≥ 3>, <Weight Function> ]
Split.Syntax=[ <文字>, <List of Texts to split on> ]
StartAnimation.Syntax=[ ]\n[ <布林值> ]\n[ <點或數值滑桿>, <點或數值滑桿>, ... ]\n[ <點或數值滑桿>, <點或數值滑桿>, ..., <布林值> ]
StartRecord.Syntax=[ ]\n[ <布林值> ]
StemPlot.Syntax=[ <串列> ]\n[ <串列>, <Adjustment -1|0|1> ]
StepGraph.Syntax=[ <點集> ]\n[ <點集>, <Boolean Join> ]\n[ <x 座標集合>, <y 座標集合> ]\n[ <點集>, <Boolean Join>, <Point Style> ]\n[ <x 座標集合>, <y 座標集合>, <Boolean Join> ]\n[ <x 座標集合>, <y 座標集合>, <Boolean Join>, <Point Style> ]
StickGraph.Syntax=[ <點集> ]\n[ <點集>, <Boolean Horizontal> ]\n[ <x 座標集合>, <y 座標集合> ]\n[ <x 座標集合>, <y 座標集合>, <Boolean Horizontal> ]
Stretch.Syntax=[ <物件>, <向量> ]\n[ <物件>, <線>, <比例> ]
Substitute.SyntaxCAS=[ <Expression>, <Substitution List> ]\n[ <Expression>, <from>, <to> ]
Sum.Syntax=[ <串列> ]\n[ <串列>, <元素數目> ]\n[ <串列>, <List of Frequencies> ]\n[ <Expression>, <Variable>, <Start Value>, <End Value> ]
Sum.SyntaxCAS=[ <串列> ]\n[ <Expression>, <Variable>, <Start Value>, <End Value> ]
SumSquaredErrors.Syntax=[ <點集>, <函數> ]
SurdText.Syntax=[ <點> ]\n[ <Number> ]\n[ <Number>, <串列> ]
Surface.Syntax=[ <函數>, <角度> ]\n[ <曲線>, <角度>, <線> ]\n[ <Expression>, <Expression>, <Expression>, <Parameter Variable 1>, <Start Value>, <End Value>, <Parameter Variable 2>, <Start Value>, <End Value> ]
TDistribution.Syntax=[ <Degrees of Freedom>, <變數值> ]\n[ <Degrees of Freedom>, <變數值>, <是否累積？> ]\n[ <Degrees of Freedom>, x, <是否累積？> ]
TDistribution.SyntaxCAS=[ <Degrees of Freedom>, <變數值> ]
TMean2Estimate.Syntax=[ <List of Sample Data 1>, <List of Sample Data 2>, <信心水準>, <Boolean Pooled> ]\n[ <Sample Mean 1>, <Sample Standard Deviation 1>, <Sample Size 1>, <Sample Mean 2>, <Sample Standard Deviation 2>, <Sample Size 2>, <信心水準>, <Boolean Pooled> ]
TMeanEstimate.Syntax=[ <List of Sample Data>, <信心水準> ]\n[ <Sample Mean>, <Sample Standard Deviation>, <Sample Size>, <信心水準> ]
TTest.Syntax=[ <List of Sample Data>, <Hypothesized Mean>, <Tail> ]\n[ <Sample Mean>, <Sample Standard Deviation>, <Sample Size>, <Hypothesized Mean>, <Tail> ]
TTest2.Syntax=[ <List of Sample Data 1>, <List of Sample Data 2>, <Tail>, <Boolean Pooled> ]\n[ <Sample Mean 1>, <Sample Standard Deviation 1>, <Sample Size 1>, <Sample Mean 2>, <Sample Standard Deviation 2>, <Sample Size 2>, <Tail>, <Boolean Pooled> ]
TTestPaired.Syntax=[ <List of Sample Data 1>, <List of Sample Data 2>, <Tail> ]
TableText.Syntax=[ <串列>, <串列>, ... ]\n[ <串列>, <串列>, ..., <對齊方式> ]
Take.Syntax=[ <串列>, <起始位置>, <結束位置> ]\n[ <串列>, <起始位置> ]\n[ <文字>, <起始位置>, <結束位置> ]\n[ <文字>, <起始位置> ]
Take.SyntaxCAS=[ <串列>, <起始位置> ]\n[ <串列>, <起始位置>, <結束位置> ]
Tangent.Syntax=[ <點>, <圓錐曲線> ]\n[ <點>, <函數> ]\n[ <Point on Curve>, <曲線> ]\n[ <x-Value>, <函數> ]\n[ <線>, <圓錐曲線> ]\n[ <圓錐曲線>, <圓錐曲線> ]
Tangent.SyntaxCAS=[ <Number>, <函數> ]\n[ <點>, <物件> ]
TaylorSeries.Syntax=[ <函數>, <x-Value>, <Order Number> ]
TaylorSeries.SyntaxCAS=[ <Expression>, <x-Value>, <Order Number> ]\n[ <Expression>, <Variable>, <變數值>, <Order Number> ]
Tetrahedron.Syntax=[ <Equilateral Triangle> ]\n[ <點>, <點>, <點> ]\n[ <點>, <點>, <Direction> ]
Text.Syntax=[ <物件> ]\n[ <物件>, <代換變數？> ]\n[ <物件>, <點> ]\n[ <物件>, <點>, <代換變數？> ]\n[ <物件>, <點>, <代換變數？>, <Boolean for LaTeX formula> ]\n[<物件>, <點>, <代換變數？>, <Boolean for LaTeX formula>, <Horizontal alignment [-1|0|1]>]\n[<物件>, <點>, <代換變數？>, <Boolean for LaTeX formula>, <Horizontal alignment [-1|0|1]>, <Vertical alignment [-1|0|1]>]
TextToUnicode.Syntax=[ <文字> ]
Textfield.Syntax=[ <連結物件> ]
TiedRank.Syntax=[ <串列> ]
ToBase.Syntax=[ <Number>, <Base> ]
ToComplex.Syntax=[ <向量> ]
ToExponential.SyntaxCAS=[ <複數> ]
ToPoint.Syntax=[ <複數> ]
ToPolar.Syntax=[ <複數> ]\n[ <向量> ]
ToolImage.Syntax=[ <Number> ]\n[ <Number>, <點> ]\n[ <Number>, <點>, <點> ]
Top.Syntax=[ <Quadric> ]
Translate.Syntax=[ <物件>, <向量> ]\n[ <向量>, <起始點> ]
Transpose.Syntax=[ <矩陣> ]
TrapezoidalSum.Syntax=[ <函數>, <初值>, <末值>, <Number of Trapezoids> ]
TravelingSalesman.Syntax=[ <點集> ]
TriangleCenter.Syntax=[ <點>, <點>, <點>, <Number> ]
TriangleCurve.Syntax=[ <點>, <點>, <點>, <Equation> ]
Triangular.Syntax=[ <Lower Bound>, <Upper Bound>, <Mode>, <變數值> ]\n[ <Lower Bound>, <Upper Bound>, <Mode>, <變數值>, <是否累積？> ]\n[ <Lower Bound>, <Upper Bound>, <Mode>, x, <是否累積？> ]
TrigCombine.Syntax=[ <Expression> ]\n[ <Expression>, <Target Function> ]
TrigExpand.Syntax=[ <Expression> ]\n[ <Expression>, <Target Function> ]
TrigExpand.SyntaxCAS=[ <Expression> ]\n[ <Expression>, <Target Function> ]\n[ <Expression>, <Target Function>, <Target Variable> ]\n[ <Expression>, <Target Function>, <Target Variable>, <Target Variable> ]
TrigSimplify.Syntax=[ <Expression> ]
Trilinear.Syntax=[ <點>, <點>, <點>, <Number>, <Number>, <Number> ]
TurningPoint.Syntax=[ <多項式> ]
Turtle.Syntax=[]
TurtleBack.Syntax=[ <Turtle>, <Distance> ]
TurtleDown.Syntax=[ <Turtle> ]
TurtleForward.Syntax=[ <Turtle>, <Distance> ]
TurtleLeft.Syntax=[ <Turtle>, <角度> ]
TurtleRight.Syntax=[ <Turtle>, <角度> ]
TurtleUp.Syntax=[ <Turtle> ]
UnicodeToLetter.Syntax=[ <整數> ]
UnicodeToText.Syntax=[ <整數串列> ]
Uniform.Syntax=[ <Lower Bound>, <Upper Bound>, <變數值> ]\n[ <Lower Bound>, <Upper Bound>, <變數值>, <是否累積？> ]\n[ <Lower Bound>, <Upper Bound>, x, <是否累積？> ]
Union.Syntax=[ <串列>, <串列> ]\n[ <多邊形>, <多邊形> ]
Unique.Syntax=[ <串列> ]
UnitOrthogonalVector.Syntax=[ <線> ]\n[ <半徑線段> ]\n[ <向量> ]
UnitOrthogonalVector.Syntax3D=[ <線> ]\n[ <半徑線段> ]\n[ <向量> ]\n[ <平面> ]
UnitOrthogonalVector.SyntaxCAS=[ <向量> ]
UnitVector.Syntax=[ <物件> ]
UnitVector.SyntaxCAS=[ <向量> ]
UpdateConstruction.Syntax=[ ]\n[ <次數> ]
UpperSum.Syntax=[ <函數>, <初值>, <末值>, <長條數> ]
Variance.Syntax=[ <List of Raw Data> ]\n[ <數列一>, <List of Frequencies> ]
Variance.SyntaxCAS=[ <數列一> ]
Vector.Syntax=[ <點> ]\n[ <起始點>, <結束點> ]
Vertex.Syntax=[ <圓錐曲線> ]\n[ <Inequality> ]\n[ <多邊形> ]\n[ <多邊形>, <Index> ]\n[ <半徑線段>, <Index> ]
VerticalText.Syntax=[ <文字> ]\n[ <文字>, <點> ]
Volume.Syntax=[ <Solid> ]
Voronoi.Syntax=[ <點集> ]
Weibull.Syntax=[ <Shape>, <Scale>, <變數值> ]\n[ <Shape>, <Scale>, <變數值>, <是否累積？> ]\n[ <Shape>, <Scale>, x, <是否累積？> ]
Weibull.SyntaxCAS=[ <Shape>, <Scale>, <變數值> ]
ZMean2Estimate.Syntax=[ <List of Sample Data 1>, <List of Sample Data 2>, <σ1>, <σ2>, <信心水準> ]\n[ <Sample Mean 1>, <σ1>, <Sample Size 1>, <Sample Mean 2>, <σ2>, <Sample Size 2>, <信心水準> ]
ZMean2Test.Syntax=[ <List of Sample Data 1>, <σ1>, <List of Sample Data 2>, <σ2>, <Tail> ]\n[ <Sample Mean 1>, <σ1>, <Sample Size 1>, <Sample Mean 2>, <σ2>, <Sample Size 2>, <Tail> ]
ZMeanEstimate.Syntax=[ <List of Sample Data>, <σ>, <信心水準> ]\n[ <Sample Mean>, <σ>, <Sample Size>, <信心水準> ]
ZMeanTest.Syntax=[ <List of Sample Data>, <σ>, <Hypothesized Mean>, <Tail> ]\n[ <Sample Mean>, <σ>, <Sample Size>, <Hypothesized Mean>, <Tail> ]
ZProportion2Estimate.Syntax=[ <Sample Proportion 1>, <Sample Size 1>, <Sample Proportion 2>, <Sample Size 2>, <信心水準> ]
ZProportion2Test.Syntax=[ <Sample Proportion 1>, <Sample Size 1>, <Sample Proportion 2>, <Sample Size 2>, <Tail> ]
ZProportionEstimate.Syntax=[ <Sample Proportion>, <Sample Size>, <信心水準> ]
ZProportionTest.Syntax=[ <Sample Proportion>, <Sample Size>, <Hypothesized Proportion>, <Tail> ]
Zip.Syntax=[ <Expression>, <Var1>, <List1>, <Var2>, <List2>, ... ]
Zipf.Syntax=[ <元素數目>, <Exponent> ]\n[ <元素數目>, <Exponent>, <是否累積？> ]\n[ <元素數目>, <Exponent>, <變數值>, <是否累積？> ]
Zipf.SyntaxCAS=[ <元素數目>, <Exponent>, <變數值>, <是否累積？> ]
ZoomIn.Syntax=[ ]\n[ <縮放倍率> ]\n[ <縮放倍率>, <中心點> ]\n[ <x 最小值>, <y 最小值>, <x 最大值>, <y 最大值> ]\n[ <x 最小值>, <y 最小值>, <z 最小值>, <x 最大值>, <y 最大值>, <z 最大值> ]
ZoomOut.Syntax=[ <縮放倍率> ]\n[ <縮放倍率>, <中心點> ]
mad.Syntax=[ <List of Raw Data> ]\n[ <數列一>, <List of Frequencies> ]
mean.Syntax=[ <List of Raw Data> ]\n[ <數列一>, <List of Frequencies> ]
mean.SyntaxCAS=[ <數列一> ]
nCr.Syntax=[ <數值 n>, <數值 r> ]
stdev.Syntax=[ <List of Raw Data> ]\n[ <數列一>, <List of Frequencies> ]
stdevp.Syntax=[ <List of Raw Data> ]\n[ <數列一>, <List of Frequencies> ]
stdevp.SyntaxCAS=[ <數列一> ]